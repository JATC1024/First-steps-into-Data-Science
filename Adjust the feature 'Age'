{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Titanic.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [
        "DQGbC9hvPmGz",
        "WbnWsbbaQJjS",
        "NudH9LEpYYOn",
        "S4DZHJgSj6kl",
        "lIufEwZAldfL",
        "kNNdKlc_xwVe",
        "iXoj1j3LzG4L",
        "qRSI8DpxRp59",
        "rl_LtgJLVjK7",
        "Knzw_Nv0bWis",
        "NanxQOkJfGPG"
      ],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/JATC1024/First-steps-into-Data-Science/blob/master/Adjust%20the%20feature%20'Age'\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "id": "e-eNjYJvPJJa",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "# An attempt to the Titanic: Machine Learning from disaster contest"
      ]
    },
    {
      "metadata": {
        "id": "DQGbC9hvPmGz",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## The problem:\n",
        "Given a dataset of some passengers that boarded on the Titanic, predict whether they survivied the accident or not."
      ]
    },
    {
      "metadata": {
        "id": "WbnWsbbaQJjS",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## The dataset:\n",
        "The dataset can be achieved on Kaggle: [dataset](https://www.kaggle.com/c/titanic/data).<br>\n",
        "It contains some features which are briefly described:\n",
        "- Survival: whether the passenger survived or not (0 = No, 1 = Yes).\n",
        "- Pclass: passenger's ticket class\t(1 = 1st, 2 = 2nd, 3 = 3rd).\n",
        "- Sex: passenger gender.\n",
        "- Age: passenger age in years.\n",
        "- Sibsp:\tthe total number of siblings and spouses that boarded on the Titanic.\n",
        "- Parch: the total number of parents and children that boarded on the Titanic.\n",
        "- Ticket:\tpassenger ticket number.\n",
        "- Fare:\tpassenger fare.\n",
        "- Cabin: passenger\tcabin number.\n",
        "- Embarked:\tport of embarkation (C = Cherbourg, Q = Queenstown, S = Southampton).\n",
        "\n"
      ]
    },
    {
      "metadata": {
        "id": "hSjeOUOXSXqF",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Workflow:\n",
        "We will work through the following steps:\n",
        "1. Preprocess the data.\n",
        "> Take a brief look at the data. <br>\n",
        "> Visualize the data to observe the distributions and make decision on each feature. <br>\n",
        "> Check for correlations between the features.\n",
        "2. Create a  model and see how it perfomrs.\n",
        "> Linear Regression. <br>\n",
        "> Logistic Classifier.<br>\n",
        "> Random Forest. <br>\n",
        "> XGBoost <br>\n",
        "3. Tuning the hyperparameters to get the best model."
      ]
    },
    {
      "metadata": {
        "id": "X1pHbFVvhjMF",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Results\n",
        "So far the best result achieved  by this notebook is 0.79904, ranks 1713."
      ]
    },
    {
      "metadata": {
        "id": "YHKe2UvMV5jn",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Preprocess the data:\n",
        "In this step, we will convert our data into a structure that fits the models."
      ]
    },
    {
      "metadata": {
        "id": "aD_djjv7MaW4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "outputId": "35617488-d979-4ae4-c37d-084454ea57f0"
      },
      "cell_type": "code",
      "source": [
        "# Get new version of seaborn\n",
        "!pip install seaborn=='0.9.0'"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: seaborn==0.9.0 in /usr/local/lib/python3.6/dist-packages (0.9.0)\n",
            "Requirement already satisfied: matplotlib>=1.4.3 in /usr/local/lib/python3.6/dist-packages (from seaborn==0.9.0) (3.0.2)\n",
            "Requirement already satisfied: pandas>=0.15.2 in /usr/local/lib/python3.6/dist-packages (from seaborn==0.9.0) (0.22.0)\n",
            "Requirement already satisfied: numpy>=1.9.3 in /usr/local/lib/python3.6/dist-packages (from seaborn==0.9.0) (1.14.6)\n",
            "Requirement already satisfied: scipy>=0.14.0 in /usr/local/lib/python3.6/dist-packages (from seaborn==0.9.0) (1.1.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=1.4.3->seaborn==0.9.0) (1.0.1)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=1.4.3->seaborn==0.9.0) (2.5.3)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=1.4.3->seaborn==0.9.0) (2.3.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib>=1.4.3->seaborn==0.9.0) (0.10.0)\n",
            "Requirement already satisfied: pytz>=2011k in /usr/local/lib/python3.6/dist-packages (from pandas>=0.15.2->seaborn==0.9.0) (2018.9)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from kiwisolver>=1.0.1->matplotlib>=1.4.3->seaborn==0.9.0) (40.7.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.1->matplotlib>=1.4.3->seaborn==0.9.0) (1.11.0)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "UitjaJm5XroN",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "#@title Import libraries:\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib as mlp\n",
        "from matplotlib import pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.model_selection import cross_validate\n",
        "from sklearn.ensemble import GradientBoostingClassifier\n",
        "import re"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "NudH9LEpYYOn",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Load the data:"
      ]
    },
    {
      "metadata": {
        "id": "ywRt8Z8JW43u",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "train_data = pd.read_csv('sample_data/train.csv', sep = ',')\n",
        "test_data = pd.read_csv('sample_data/test.csv', sep = ',')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "xSjxGUFSRCaQ",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Make a combination of the train and test data so that we can convert them at the same time\n",
        "combined_data = train_data.append(test_data)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "md42yJScooMk",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Defines functions to get train data and test data from combined data\n",
        "def get_train_data():\n",
        "  return combined_data.iloc[0:len(train_data),]\n",
        "\n",
        "def get_test_data():\n",
        "  return combined_data.iloc[len(train_data):len(combined_data),]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "3UY-PbQvQkc4",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Take a look at the data:"
      ]
    },
    {
      "metadata": {
        "id": "vfFvtcZjg0ly",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 306
        },
        "outputId": "0d6fd869-1453-4af8-d17c-6dfcfcd67ce4"
      },
      "cell_type": "code",
      "source": [
        "combined_data.head()"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>A/5 21171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>38.0</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PC 17599</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35.0</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>113803</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>373450</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Age Cabin Embarked     Fare  \\\n",
              "0  22.0   NaN        S   7.2500   \n",
              "1  38.0   C85        C  71.2833   \n",
              "2  26.0   NaN        S   7.9250   \n",
              "3  35.0  C123        S  53.1000   \n",
              "4  35.0   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass     Sex  SibSp  Survived            Ticket  \n",
              "0       3    male      1       0.0         A/5 21171  \n",
              "1       1  female      1       1.0          PC 17599  \n",
              "2       3  female      0       1.0  STON/O2. 3101282  \n",
              "3       1  female      1       1.0            113803  \n",
              "4       3    male      0       0.0            373450  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "metadata": {
        "id": "Yvjmd8yHQjge",
        "colab_type": "code",
        "outputId": "7a6f0361-cc8b-4003-bcd4-cdd5df81ac48",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 289
        }
      },
      "cell_type": "code",
      "source": [
        "combined_data.tail()"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>413</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Spector, Mr. Woolf</td>\n",
              "      <td>0</td>\n",
              "      <td>1305</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>A.5. 3236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>414</th>\n",
              "      <td>39.0</td>\n",
              "      <td>C105</td>\n",
              "      <td>C</td>\n",
              "      <td>108.9000</td>\n",
              "      <td>Oliva y Ocana, Dona. Fermina</td>\n",
              "      <td>0</td>\n",
              "      <td>1306</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PC 17758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>415</th>\n",
              "      <td>38.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Saether, Mr. Simon Sivertsen</td>\n",
              "      <td>0</td>\n",
              "      <td>1307</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SOTON/O.Q. 3101262</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>416</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Ware, Mr. Frederick</td>\n",
              "      <td>0</td>\n",
              "      <td>1308</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>359309</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>417</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>C</td>\n",
              "      <td>22.3583</td>\n",
              "      <td>Peter, Master. Michael J</td>\n",
              "      <td>1</td>\n",
              "      <td>1309</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2668</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Age Cabin Embarked      Fare                          Name  Parch  \\\n",
              "413   NaN   NaN        S    8.0500            Spector, Mr. Woolf      0   \n",
              "414  39.0  C105        C  108.9000  Oliva y Ocana, Dona. Fermina      0   \n",
              "415  38.5   NaN        S    7.2500  Saether, Mr. Simon Sivertsen      0   \n",
              "416   NaN   NaN        S    8.0500           Ware, Mr. Frederick      0   \n",
              "417   NaN   NaN        C   22.3583      Peter, Master. Michael J      1   \n",
              "\n",
              "     PassengerId  Pclass     Sex  SibSp  Survived              Ticket  \n",
              "413         1305       3    male      0       NaN           A.5. 3236  \n",
              "414         1306       1  female      0       NaN            PC 17758  \n",
              "415         1307       3    male      0       NaN  SOTON/O.Q. 3101262  \n",
              "416         1308       3    male      0       NaN              359309  \n",
              "417         1309       3    male      1       NaN                2668  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "metadata": {
        "id": "qpaLFIxsUGev",
        "colab_type": "code",
        "outputId": "6578d1a4-30f8-4174-d9f0-1519e49aafc3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        }
      },
      "cell_type": "code",
      "source": [
        "# Check for missing values:\n",
        "missing_values = combined_data.isnull()\n",
        "print('Features with missing values:')\n",
        "for feature in missing_values.columns.values:\n",
        "  if missing_values[feature].any():\n",
        "    print(feature, ':')\n",
        "    print(missing_values[feature].value_counts())\n",
        "    print()"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Features with missing values:\n",
            "Age :\n",
            "False    1046\n",
            "True      263\n",
            "Name: Age, dtype: int64\n",
            "\n",
            "Cabin :\n",
            "True     1014\n",
            "False     295\n",
            "Name: Cabin, dtype: int64\n",
            "\n",
            "Embarked :\n",
            "False    1307\n",
            "True        2\n",
            "Name: Embarked, dtype: int64\n",
            "\n",
            "Fare :\n",
            "False    1308\n",
            "True        1\n",
            "Name: Fare, dtype: int64\n",
            "\n",
            "Survived :\n",
            "False    891\n",
            "True     418\n",
            "Name: Survived, dtype: int64\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "H3q1LsSxQ1oV",
        "colab_type": "code",
        "outputId": "148c4436-9270-44e1-c1ad-ffd03ed36956",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "cell_type": "code",
      "source": [
        "# Check for data types:\n",
        "combined_data.dtypes"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age            float64\n",
              "Cabin           object\n",
              "Embarked        object\n",
              "Fare           float64\n",
              "Name            object\n",
              "Parch            int64\n",
              "PassengerId      int64\n",
              "Pclass           int64\n",
              "Sex             object\n",
              "SibSp            int64\n",
              "Survived       float64\n",
              "Ticket          object\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "metadata": {
        "id": "KqfkpzpBX1GC",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "So we have 6 **numeric features:** age, fare, parch, passengerid, pclass, sibsp and the other are **categorical features**: cabin, embarked, name, sex, ticket."
      ]
    },
    {
      "metadata": {
        "id": "tlgM3Q3pRvRe",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Visualize the data to observe the distributions. \n",
        "Let's make some plots."
      ]
    },
    {
      "metadata": {
        "id": "ZU42G_75Xs5i",
        "colab_type": "code",
        "outputId": "ef631de8-f8bc-43e3-c2a1-0571f06e8040",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "cell_type": "code",
      "source": [
        "# List all the columns\n",
        "train_data.columns.values"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
              "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "metadata": {
        "id": "us28XfBUj0eE",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### PassengerId\n",
        "We can see that passenger ids are unique for each passenger so it doesn't give any information. Therefore, we simply ignore it."
      ]
    },
    {
      "metadata": {
        "id": "S4DZHJgSj6kl",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Pclass\n",
        "The number of different classes is small so we should make a count plot to see how pclass affects survival change."
      ]
    },
    {
      "metadata": {
        "id": "cKkjVmjGhkaa",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "cellView": "both",
        "outputId": "8eb08c30-5bda-40ae-87fd-753c1f69684b"
      },
      "cell_type": "code",
      "source": [
        "sns.countplot(x = 'Pclass', hue = 'Survived', data = train_data)\n",
        "plt.title('Number of people on each class')"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Number of people on each class')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "FWAtLaA4kNAr",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "As we can see, upper classes are likely to have more change to survive than lower classes. Instead of one hot encoding the feature, we can directly use it in its original form, since there exists a liner relationship between Pclass and Survived."
      ]
    },
    {
      "metadata": {
        "id": "lIufEwZAldfL",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Name\n",
        "Our intuition tells that names are kind of unique. Let's check:"
      ]
    },
    {
      "metadata": {
        "id": "0lS1qBqpjE8P",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "cellView": "both",
        "outputId": "053f3dae-efe6-43bd-df69-44efeeb615b3"
      },
      "cell_type": "code",
      "source": [
        "print('Unique values: ', len(combined_data['Name'].unique()))\n",
        "print('Total values: ', len(combined_data))"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Unique values:  1307\n",
            "Total values:  1309\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "beo16x5QlotQ",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "So almost all the names are unique. Just like passengerId, we may want to ignore this feature as well. However, we can get the title of the person from the name and see if it's a useful information."
      ]
    },
    {
      "metadata": {
        "id": "UrnIAMZijs1D",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "071d9852-b985-4918-bc41-529007fcafac"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Title'] = combined_data['Name'].apply(lambda x: re.search(', (.+?). ', x).group(1))\n",
        "combined_data.head()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>38.0</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35.0</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Age Cabin Embarked     Fare  \\\n",
              "0  22.0   NaN        S   7.2500   \n",
              "1  38.0   C85        C  71.2833   \n",
              "2  26.0   NaN        S   7.9250   \n",
              "3  35.0  C123        S  53.1000   \n",
              "4  35.0   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass     Sex  SibSp  Survived            Ticket Title  \n",
              "0       3    male      1       0.0         A/5 21171    Mr  \n",
              "1       1  female      1       1.0          PC 17599   Mrs  \n",
              "2       3  female      0       1.0  STON/O2. 3101282  Miss  \n",
              "3       1  female      1       1.0            113803   Mrs  \n",
              "4       3    male      0       0.0            373450    Mr  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "metadata": {
        "id": "LMfYTlVqoOVO",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Let's see how many unique titles there are."
      ]
    },
    {
      "metadata": {
        "id": "dXaZK0G7oTds",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "d31a8f43-9424-4163-a167-283a1557cc27"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Title'].unique()"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Mr', 'Mrs', 'Miss', 'Master', 'Don', 'Rev', 'Dr', 'Mme', 'Ms',\n",
              "       'Major', 'Lady', 'Sir', 'Mlle', 'Col', 'Capt', 'th', 'Jonkheer',\n",
              "       'Dona'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "metadata": {
        "id": "Hv9V9aNKocfc",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "There are not many of them, so let's make a count plot."
      ]
    },
    {
      "metadata": {
        "id": "iUIB5GWLog4M",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "2f8f94ea-5433-4147-a3a1-b61c3f4400a5"
      },
      "cell_type": "code",
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        "sns.countplot(x = 'Title', hue = 'Survived', data = get_train_data())\n",
        "plt.title('Suvival count based on title')"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Suvival count based on title')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nMCJWdLPcBVS9kg9SXWl5Upne0/YeAdxXDoUeR3X+GJk5H/h7qhP8HwEWU538T9neQ8r4w8BM4Hvd\n1PaNUt8vgHuBp6guruiLc6nOoXs0In7QyfxLyu+VEXHz2jMz8/vAvwGzyzbfQfV3k9RH8fxTHyRJ\nklQH9qRJkiTVkCFNkiSphgxpkiRJNWRIkyRJqiFDmiRJUg2N7nmR+powYUK2t7cPdRmSJEk9WrBg\nwYrMnNjs8ut0SGtvb2f+/PlDXYYkSVKPIqK727y9gIc7JUmSasiQJkmSVEOGNEmSpBpap89J68yq\nVatYunQpTz311FCX0m8bbrghbW1tjBkzZqhLkSRJg2zYhbSlS5eyySab0N7eTkQMdTl9lpmsXLmS\npUuXsu222w51OZIkaZANu8OdTz31FOPHj1+nAxpARDB+/Phh0SMoSZJ6b9iFNGCdD2gdhst2SJKk\n3huWIa0zX/jCF9hpp52YOnUq06ZNY968ef1e59y5c5k1a9YAVAdjx44dkPVIkqThYdidk9aZG264\ngcsvv5ybb76ZDTbYgBUrVvDMM8809djVq1czenTnT9OMGTOYMWPGQJYqSZIEjJCetAceeIAJEyaw\nwQYbADBhwgS22mor2tvbWbFiBQDz589n7733BuDUU0/liCOOYM899+SII45g9913584771yzvr33\n3pv58+fzrW99ixNPPJHHHnuMbbbZhr/85S8APPnkk0yePJlVq1Zxzz33cMABB7DLLrvwhje8gd/8\n5jcA3Hvvveyxxx7svPPOfOYznxnEZ0OSJK0LRkRI22+//ViyZAmveMUrOP744/n5z3/e42Puuusu\nfvazn3HRRRcxc+ZMLr74YqAKfA888ADTp09fs+y4ceOYNm3amvVefvnl7L///owZM4Zjjz2Wr371\nqyxYsIAvfvGLHH/88QCcfPLJvP/97+f2229nyy23bMFWS5KkddmwOdy5y0fPB+CMt+5ALlnxgvkX\n/OAnLLjpRm66/le87bDD+NAn/qnb9c2YMYONNtoIgMMPP5z99tuP0047jYsvvphDDz30BcvPnDmT\nOXPmsM8++zB79myOP/54nnjiCa6//noOO+ywNcs9/fTTAFx33XV897vfBeCII47g4x//eN82XJIk\nDUvDJqT1ZNSoUbxujz153R57st0rd+CyS+cwevToNYco1/6qixe96EVrhidNmsT48eNZuHAhc+bM\n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\nSUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "NDOTXWkgpQID",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Looks like there are 4 main different titles: Mr, Mrs, Miss and Master. Let's join all the rest to one sigle title: Rare."
      ]
    },
    {
      "metadata": {
        "id": "4ieBjky5pZhb",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "9b453f48-f3b9-4ecf-873e-da6062796e75"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Title'] = combined_data['Title'].apply(lambda x: x if x in ['Mr', 'Mrs', 'Miss', 'Master'] else 'Rare')\n",
        "fig = plt.figure(figsize = (10, 5))\n",
        "sns.countplot(x = 'Title', hue = 'Survived', data = get_train_data())"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f9eb9f61940>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmcAAAFACAYAAAD589sCAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAGldJREFUeJzt3X+0V3Wd7/HnOw6KioICde0c8lDQ\nTBJEevTSdVVojRrTHOc26tFmANMWZTaXqVndvE3LlKYZp5rrtdGbi7UooBxBrQaGhXZbms3NHziH\nRETMBeUtDosSMJm0TKH3/eO7wQPy44uc7/l+Duf5WOu72PuzP3vz/q7P4vA6n/0rMhNJkiSV4TXN\nLkCSJEkvM5xJkiQVxHAmSZJUEMOZJElSQQxnkiRJBTGcSZIkFcRwJkmSVBDDmSRJUkEMZ5IkSQVp\naXYBh2P06NHZ3t7e7DIkSZIOatWqVVszc8zB+g3ocNbe3k53d3ezy5AkSTqoiPhZPf08rSlJklQQ\nw5kkSVJBDGeSJEkFGdDXnEmSpCPDSy+9RE9PDy+88EKzSzlsw4YNo62tjaFDh76q/Q1nkiSp6Xp6\nejj++ONpb28nIppdzquWmWzbto2enh7GjRv3qo7haU1JktR0L7zwAqNGjRrQwQwgIhg1atRhzQAa\nziRJUhEGejDb5XC/h+FMkiSpIIYzSZJUrC984QtMnDiRyZMnM2XKFFauXHnYx1y2bBnXX399H1QH\nw4cP75Pj9OYNAZIkqUgPPvggy5cv50c/+hFHH300W7du5cUXX6xr3x07dtDSsu+Y09nZSWdnZ1+W\n2qecOZMkSUXavHkzo0eP5uijjwZg9OjRvP71r6e9vZ2tW7cC0N3dzbRp0wC49tprmTFjBmeddRYz\nZsxg6tSpPP7447uPN23aNLq7u1mwYAEf//jH2b59O6eccgq///3vAXj++ecZO3YsL730Ej/5yU84\n//zzOf3003nnO9/Jj3/8YwCeeuop3vGOdzBp0iQ++9nPNuR7D5qZs9M/tajZJRyyVV+a2ewSJElq\nmnPPPZe5c+fy5je/mfe+9710dXXx7ne/+4D7rFu3jh/+8Iccc8wx3HDDDdx+++1cd911bN68mc2b\nN9PR0cHatWsBGDFiBFOmTOEHP/gBZ599NsuXL+e8885j6NChzJ49m1tuuYUJEyawcuVKPvaxj3Hv\nvfcyZ84crrzySmbOnMnNN9/ckO/tzJkkSSrS8OHDWbVqFfPmzWPMmDF0dXWxYMGCA+7T2dnJMccc\nA8DFF1/MnXfeCcDtt9/OhRde+Ir+XV1dLFmyBIDFixfT1dXFc889xwMPPMBFF13ElClT+MhHPsLm\nzZsBuP/++7n00ksBmDFjRl991T0MmpkzSZI08AwZMoRp06Yxbdo0Jk2axMKFC2lpadl9KnLv54kd\nd9xxu5dbW1sZNWoUa9asYcmSJdxyyy2vOH5nZyef+cxneOaZZ1i1ahXnnHMOzz//PCNHjmT16tX7\nrKnRj/xw5kySJBXpySefZP369bvXV69ezSmnnEJ7ezurVq0C4Fvf+tYBj9HV1cUXv/hFtm/fzuTJ\nk1+xffjw4ZxxxhnMmTOH97///QwZMoQTTjiBcePGcccddwC1p/4/+uijAJx11lksXrwYgFtvvbVP\nvufeDGeSJKlIzz33HLNmzeLUU09l8uTJrFu3jmuvvZbPfe5zzJkzh46ODoYMGXLAY1x44YUsXryY\niy++eL99urq6+OY3v0lXV9futltvvZX58+fztre9jYkTJ7J06VIAbrzxRm6++WYmTZrEpk2b+uaL\n7iUysyEH7g8dHR3Z3d1dV19vCJAkqVxPPPEEb3nLW5pdRp/Z1/eJiFWZ2XGwfZ05kyRJKojhTJIk\nqSCGM0mSpIIYziRJkgpiOJMkSSqI4UySJKkgviFAkiQVp68fgVXv46nuvvtu5syZw86dO/nwhz/M\n1Vdfvcf23/3ud8ycOZNVq1YxatQolixZQnt7e5/W6syZJEkSsHPnTq666iruuusu1q1bx2233ca6\ndev26DN//nxOPPFENmzYwCc+8Qk+/elP93kdhjNJkiTg4YcfZvz48bzxjW/kqKOO4pJLLtn9ZoBd\nli5dyqxZs4Da2wfuuece+vqB/oYzSZIkYNOmTYwdO3b3eltb2yte0dS7T0tLCyNGjGDbtm19Wofh\nTJIkqSCGM0mSJKC1tZWNGzfuXu/p6aG1tXW/fXbs2MH27dsZNWpUn9bR8HAWEUMi4pGIWF6tj4uI\nlRGxISKWRMRRVfvR1fqGant7o2uTJEna5YwzzmD9+vU89dRTvPjiiyxevJjOzs49+nR2drJw4UIA\n7rzzTs455xwiok/r6I9HacwBngBOqNb/AbghMxdHxC3AFcBXqz9/lZnjI+KSql9XP9QnSZIKU++j\nL/pSS0sLN910E+eddx47d+7k8ssvZ+LEiVxzzTV0dHTQ2dnJFVdcwYwZMxg/fjwnnXQSixcv7vs6\n+vyIvUREG/DHwBeAT0YtWp4DfLDqshC4llo4u6BaBrgTuCkiIvv6FghJkqT9mD59OtOnT9+jbe7c\nubuXhw0bxh133NHQGhp9WvN/Af8d+H21Pgp4NjN3VOs9wK6Tua3ARoBq+/aq/x4iYnZEdEdE95Yt\nWxpZuyRJUr9rWDiLiPcDT2fmqr48bmbOy8yOzOwYM2ZMXx5akiSp6Rp5WvMsoDMipgPDqF1zdiMw\nMiJaqtmxNmDXA0Q2AWOBnohoAUYAffvgEEmSpMI1bOYsM/9HZrZlZjtwCXBvZv458H3gwqrbLGDX\no3eXVetU2+/1ejNJkjTYNOM5Z5+mdnPABmrXlM2v2ucDo6r2TwJX72d/SZKkI1Z/PEqDzLwPuK9a\n/ilw5j76vABc1B/1SJIklapfwpkkSdKh+PncSX16vDdc89hB+1x++eUsX76c1772taxdu/YV2zOT\nOXPmsGLFCo499lgWLFjAaaed1qd1gq9vkiRJAuCyyy7j7rvv3u/2u+66i/Xr17N+/XrmzZvHlVde\n2ZA6DGeSJEnAu971Lk466aT9bl+6dCkzZ84kIpg6dSrPPvssmzdv7vM6DGeSJEl12LRpE2PHjt29\n3tbWxqZNmw6wx6tjOJMkSSqI4UySJKkOra2tbNy4cfd6T08Pra2tB9jj1TGcSZIk1aGzs5NFixaR\nmTz00EOMGDGCk08+uc//Hh+lIUmSilPPoy/62qWXXsp9993H1q1baWtr47rrruOll14C4KMf/SjT\np09nxYoVjB8/nmOPPZavf/3rDanDcCZJkgTcdtttB9weEdx8880Nr8PTmpIkSQUxnEmSJBXEcCZJ\nkoqQmc0uoU8c7vcwnEmSpKYbNmwY27ZtG/ABLTPZtm0bw4YNe9XH8IYASZLUdG1tbfT09LBly5Zm\nl3LYhg0bRltb26ve33AmSZKabujQoYwbN67ZZRTB05qSJEkFMZxJkiQVxHAmSZJUEMOZJElSQQxn\nkiRJBTGcSZIkFcRwJkmSVBDDmSRJUkEMZ5IkSQUxnEmSJBXEcCZJklQQw5kkSVJBDGeSJEkFMZxJ\nkiQVxHAmSZJUEMOZJElSQQxnkiRJBTGcSZIkFcRwJkmSVBDDmSRJUkEMZ5IkSQUxnEmSJBXEcCZJ\nklQQw5kkSVJBDGeSJEkFMZxJkiQVxHAmSZJUEMOZJElSQQxnkiRJBTGcSZIkFcRwJkmSVBDDmSRJ\nUkEMZ5IkSQUxnEmSJBXEcCZJklSQhoWziBgWEQ9HxKMR8XhEXFe1j4uIlRGxISKWRMRRVfvR1fqG\nant7o2qTJEkqVSNnzn4HnJOZbwOmAOdHxFTgH4AbMnM88Cvgiqr/FcCvqvYbqn6SJEmDSsPCWdY8\nV60OrT4JnAPcWbUvBP60Wr6gWqfa/p6IiEbVJ0mSVKKGXnMWEUMiYjXwNPA94CfAs5m5o+rSA7RW\ny63ARoBq+3ZgVCPrkyRJKk1Dw1lm7szMKUAbcCbwh4d7zIiYHRHdEdG9ZcuWw65RkiSpJP1yt2Zm\nPgt8H3gHMDIiWqpNbcCmankTMBag2j4C2LaPY83LzI7M7BgzZkzDa5ckSepPjbxbc0xEjKyWjwH+\nCHiCWki7sOo2C1haLS+r1qm235uZ2aj6JEmSStRy8C6v2snAwogYQi0E3p6ZyyNiHbA4Iv4WeASY\nX/WfD3wjIjYAzwCXNLA2SZKkIjUsnGXmGuDt+2j/KbXrz/ZufwG4qFH1SJIkDQS+IUCSJKkghjNJ\nkqSCGM4kSZIKYjiTJEkqiOFMkiSpIIYzSZKkghjOJEmSCmI4kyRJKojhTJIkqSCGM0mSpIIYziRJ\nkgpiOJMkSSqI4UySJKkghjNJkqSCGM4kSZIKYjiTJEkqiOFMkiSpIIYzSZKkghjOJEmSCmI4kyRJ\nKojhTJIkqSCGM0mSpIIYziRJkgpiOJMkSSqI4UySJKkghjNJkqSC1BXOIuKeetokSZJ0eFoOtDEi\nhgHHAqMj4kQgqk0nAK0Nrk2SJGnQOWA4Az4C/BXwemAVL4ez/wBuamBdkiRJg9IBw1lm3gjcGBF/\nmZn/1E81SZIkDVoHmzkDIDP/KSL+C9Dee5/MXNSguiRJkgalusJZRHwDeBOwGthZNSdgOJMkSepD\ndYUzoAM4NTOzkcVIkiQNdvU+52wt8J8aWYgkSZLqnzkbDayLiIeB3+1qzMzOhlQlSZI0SNUbzq5t\nZBGSJEmqqfduzR80uhBJkiTVf7fmr6ndnQlwFDAUeD4zT2hUYZIkSYNRvTNnx+9ajogALgCmNqoo\nSZKkwareuzV3y5p/Ac5rQD2SJEmDWr2nNT/Qa/U11J579kJDKpIkSRrE6r1b8096Le8A/h+1U5uS\nJEnqQ/Vec/ahRhciSZKkOq85i4i2iPhORDxdfb4VEW2NLk6SJGmwqfeGgK8Dy4DXV59/rdokSZLU\nh+oNZ2My8+uZuaP6LADGNLAuSZKkQanecLYtIv4iIoZUn78AtjWyMEmSpMGo3nB2OXAx8AtgM3Ah\ncFmDapIkSRq06n2UxlxgVmb+CiAiTgK+TC20SZIkqY/UO3M2eVcwA8jMZ4C3N6YkSZKkwavecPaa\niDhx10o1c1bvrJskSZLqVG84+0fgwYj4fER8HngA+OKBdoiIsRHx/YhYFxGPR8Scqv2kiPheRKyv\n/jyxao+I+EpEbIiINRFx2uF8MUmSpIGornCWmYuADwC/rD4fyMxvHGS3HcBfZ+apwFTgqog4Fbga\nuCczJwD3VOsA7wMmVJ/ZwFcP8btIkiQNeHWfmszMdcC6Q+i/mdqdnWTmryPiCaCV2js5p1XdFgL3\nAZ+u2hdlZgIPRcTIiDi5Oo4kSdKgUO9pzcMSEe3UbiBYCbyuV+D6BfC6arkV2Nhrt56qbe9jzY6I\n7ojo3rJlS8NqliRJaoaGh7OIGA58C/irzPyP3tuqWbI8lONl5rzM7MjMjjFjfEmBJEk6sjQ0nEXE\nUGrB7NbM/HbV/MuIOLnafjLwdNW+CRjba/e2qk2SJGnQaFg4i4gA5gNPZOb/7LVpGTCrWp4FLO3V\nPrO6a3MqsN3rzSRJ0mDTyGeVnQXMAB6LiNVV22eA64HbI+IK4GfUXgsFsAKYDmwAfgN8qIG1SZIk\nFalh4SwzfwjEfja/Zx/9E7iqUfVIkiQNBP1yt6YkSZLqYziTJEkqiOFMkiSpIIYzSZKkghjOJEmS\nCmI4kyRJKojhTJIkqSCGM0mSpIIYziRJkgpiOJMkSSqI4UySJKkghjNJkqSCGM4kSZIKYjiTJEkq\niOFMkiSpIIYzSZKkghjOJEmSCmI4kyRJKojhTJIkqSCGM0mSpIIYziRJkgpiOJMkSSqI4UySJKkg\nhjNJkqSCGM4kSZIKYjiTJEkqiOFMkiSpIIYzSZKkghjOJEmSCmI4kyRJKojhTJIkqSCGM0mSpIIY\nziRJkgpiOJMkSSqI4UySJKkghjNJkqSCGM4kSZIK0tLsAiSpND+fO6nZJRyyN1zzWLNLkNRHnDmT\nJEkqiOFMkiSpIIYzSZKkghjOJEmSCmI4kyRJKojhTJIkqSCGM0mSpIIYziRJkgpiOJMkSSqI4UyS\nJKkghjNJkqSCGM4kSZIK0rBwFhFfi4inI2Jtr7aTIuJ7EbG++vPEqj0i4isRsSEi1kTEaY2qS5Ik\nqWSNnDlbAJy/V9vVwD2ZOQG4p1oHeB8wofrMBr7awLokSZKK1bBwlpn/BjyzV/MFwMJqeSHwp73a\nF2XNQ8DIiDi5UbVJkiSVqr+vOXtdZm6uln8BvK5abgU29urXU7W9QkTMjojuiOjesmVL4yqVJElq\ngpZm/cWZmRGRr2K/ecA8gI6OjkPeX+oPP587qdklHLI3XPNYs0uQJNH/M2e/3HW6svrz6ap9EzC2\nV7+2qk2SJGlQ6e9wtgyYVS3PApb2ap9Z3bU5Fdje6/SnJEnSoNGw05oRcRswDRgdET3A54Drgdsj\n4grgZ8DFVfcVwHRgA/Ab4EONqkuSJKlkDQtnmXnpfja9Zx99E7iqUbVIkiQNFL4hQJIkqSCGM0mS\npIIYziRJkgpiOJMkSSqI4UySJKkghjNJkqSCNO31TTo4XwEkSdLg48yZJElSQQxnkiRJBTGcSZIk\nFcRwJkmSVBDDmSRJUkEMZ5IkSQUxnEmSJBXEcCZJklQQw5kkSVJBDGeSJEkFMZxJkiQVxHAmSZJU\nEMOZJElSQQxnkiRJBWlpdgGSjmynf2pRs0s4ZN85vtkVSBrMnDmTJEkqiOFMkiSpIIYzSZKkghjO\nJEmSCmI4kyRJKojhTJIkqSCGM0mSpIIYziRJkgpiOJMkSSqI4UySJKkghjNJkqSCGM4kSZIKYjiT\nJEkqiOFMkiSpIIYzSZKkghjOJEmSCtLS7AKkepz+qUXNLuGQfOf4ZlcgSRqonDmTJEkqiDNnkqQj\nys/nTmp2CYfkDdc81uwSVBhnziRJkgpiOJMkSSqI4UySJKkgXnMmSdqvgXanNHi3tAY+w5kkSUeo\ngRauV31pZrNLKIKnNSVJkgrizJkkSSrCQHsMCjTmUSjOnEmSJBXEcCZJklSQosJZRJwfEU9GxIaI\nuLrZ9UiSJPW3YsJZRAwBbgbeB5wKXBoRpza3KkmSpP5VTDgDzgQ2ZOZPM/NFYDFwQZNrkiRJ6lcl\nhbNWYGOv9Z6qTZIkadCIzGx2DQBExIXA+Zn54Wp9BvCfM/Pje/WbDcyuVv8AeLJfC+1fo4GtzS5C\nr4pjN7A5fgOb4zdwHeljd0pmjjlYp5Kec7YJGNtrva1q20NmzgPm9VdRzRQR3ZnZ0ew6dOgcu4HN\n8RvYHL+By7GrKem05r8DEyJiXEQcBVwCLGtyTZIkSf2qmJmzzNwRER8HvgsMAb6WmY83uSxJkqR+\nVUw4A8jMFcCKZtdRkEFx+vYI5dgNbI7fwOb4DVyOHQXdECBJkqSyrjmTJEka9AxnkiRJBTGcFSIi\nMiK+2Wu9JSK2RMTyZtalfXO8BqaDjVtEdPpe3+bry39fETEyIj7WtxXqUEXEzohYHRFrI+JfI2Jk\ns2sqmeGsHM8Db42IY6r1P2Ifz3mD2g+qfqtK++N4DUwHHLfMXJaZ1zelMvVW97+vOowEDimcRY3/\nP/at32bmlMx8K/AMcFW9Ow7G8RhUX3YAWAH8cbV8KXDbrg0RcW1EfCMi7ge+0Yzi9Ap1j1dETIyI\nh6vfHNdExIRmFCzgwON2WUTcVC1fVP2W/2hE/FvV5jj2nwON05kR8WBEPBIRD0TEH1Tt+xqf64E3\nVW1fqvp9KiL+vepzXdXWHhFPRsQiYC17PhRdfetBqtczRsTwiLgnIn4UEY9FxAVV+yvGIyLOrcb9\nRxFxR0QMb+J3aCjDWVkWA5dExDBgMrByr+2nAu/NzEv7vTLty6GM10eBGzNzCtBB7d2xao6Djdsu\n1wDnZebbgM6qzXHsPwcapx8D78zMt1Mbp7+r2vc1PlcDP6lmbT4VEecCE4AzgSnA6RHxrmr/CcD/\nzsyJmfmzBn+/QSkihgDv4eWHzL8A/NfMPA04G/jHiIhq2+7xoDab+llqP1NPA7qBT/Zr8f3I0y0F\nycw1EdFO7bfEfT3vbVlm/rZfi9J+HeJ4PQj8TUS0Ad/OzPX9U6X2Vse47XI/sCAibge+XbU5jv3k\nIOM0AlhYzYwlMLRqf8X4vPz//G7nVp9HqvXh1ELAz4GfZeZDffxVVHNMRKymNmP2BPC9qj2Av6sC\n8u+r7a+rtvUej6nUfuG9vxrTo6iN9xHJmbPyLAO+TK8p/F6e7+dadHB1jVdm/jO12ZffAisi4pz+\nKU/7caBxAyAzP0rtN/WxwKqIGOU49rv9jdPnge9X1y/9CTAM6v53FsDfVzNpUzJzfGbOr7b5M7Zx\nflvNaJ5CbQx2XXP258AY4PRq+y+pxpM9xyOA7/Uat1Mz84p+qr3fGc7K8zXgusx8rNmFqC51jVdE\nvBH4aWZ+BVhK7TSNmueg4xYRb8rMlZl5DbCF2jUvjmP/2t84jeDlGwQu29W4n/H5NXB8r32/C1y+\n63qliGiNiNc2pnztLTN/A/w34K+rm6VGAE9n5ksRcTa18LYvDwFnRcR4gIg4LiLe3C9FN4HhrDCZ\n2VP9YNEAcAjjdTGwtprWfyuwqLGV6UDqHLcvVRcorwUeAB7FcexXBxinLwJ/HxGPsOflOa8Yn8zc\nRu1U2NqI+FJm/h/gn4EHI+Ix4E72DG9qsMx8BFhD7ZT1rUBHNRYzqV1PuK99tlAL4rdFxBpqpzT/\nsF8KbgJf3yRJklQQZ84kSZIKYjiTJEkqiOFMkiSpIIYzSZKkghjOJEmSCmI4kzQoRMSo6v2KqyPi\nFxGxqdf6A1Wf9oj4YK99pkXE8uZVLWkw8vVNkgaF6nlXU6D2Ynrgucz88l7d2oEPUnsOliQ1hTNn\nkga9iHiuWrweeGc1m/aJvfocFxFfi4iHI+KRiLig/yuVNBgYziTpZVcD/7d6d98Ne237G+DezDwT\nOJvaGwSO6/cKJR3xDGeSVJ9zgaurVwPdR+3lzG9oakWSjkhecyZJ9QngzzLzyWYXIunI5syZJL3s\n1+z/JdjfBf4yIgIgIt7eb1VJGlQMZ5L0sjXAzoh4dO8bAoDPA0OBNRHxeLUuSX0uMrPZNUiSJKni\nzJkkSVJBDGeSJEkFMZxJkiQVxHAmSZJUEMOZJElSQQxnkiRJBTGcSZIkFeT/AxBvseCAJovAAAAA\nAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "6oRnsY3npvuC",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "As thist point, we would like to one hot encode the titles. We cannot assign a numeric value to them cause we're not sure about the linear relation ship between the titles and the survival change."
      ]
    },
    {
      "metadata": {
        "id": "zyYHoPOgxULq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "230f1d9e-4003-4b05-f8b8-ec49a37526df"
      },
      "cell_type": "code",
      "source": [
        "dummies = pd.get_dummies(combined_data['Title'])\n",
        "combined_data = pd.concat([combined_data, dummies], axis = 1)\n",
        "combined_data.head()"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>38.0</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35.0</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>female</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>male</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Age Cabin Embarked     Fare  \\\n",
              "0  22.0   NaN        S   7.2500   \n",
              "1  38.0   C85        C  71.2833   \n",
              "2  26.0   NaN        S   7.9250   \n",
              "3  35.0  C123        S  53.1000   \n",
              "4  35.0   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass     Sex  SibSp  Survived            Ticket Title  Master  Miss  Mr  \\\n",
              "0       3    male      1       0.0         A/5 21171    Mr       0     0   1   \n",
              "1       1  female      1       1.0          PC 17599   Mrs       0     0   0   \n",
              "2       3  female      0       1.0  STON/O2. 3101282  Miss       0     1   0   \n",
              "3       1  female      1       1.0            113803   Mrs       0     0   0   \n",
              "4       3    male      0       0.0            373450    Mr       0     0   1   \n",
              "\n",
              "   Mrs  Rare  \n",
              "0    0     0  \n",
              "1    1     0  \n",
              "2    0     0  \n",
              "3    1     0  \n",
              "4    0     0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "metadata": {
        "id": "kNNdKlc_xwVe",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Sex\n",
        "First let's make a count plot:"
      ]
    },
    {
      "metadata": {
        "id": "R1sZ7BVzx4WV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "2bfc2804-e763-4e0e-f6b0-07e34370bb55"
      },
      "cell_type": "code",
      "source": [
        "sns.countplot(x = 'Sex', hue = 'Survived', data = train_data)\n",
        "plt.title('Survival count based on gender')"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Survival count based on gender')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "XJfZILVKygtj",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "It's clear that female have a higher survival change than male. Let's encode **male as 0** and **female as 1**."
      ]
    },
    {
      "metadata": {
        "id": "1gX2pMrMyrID",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ce175a54-9581-44fe-8aad-cc6de8b90aa1"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Sex'] = combined_data['Sex'].apply(lambda x: 0 if x == 'male' else 1)\n",
        "combined_data.head()"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>38.0</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>26.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35.0</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Age Cabin Embarked     Fare  \\\n",
              "0  22.0   NaN        S   7.2500   \n",
              "1  38.0   C85        C  71.2833   \n",
              "2  26.0   NaN        S   7.9250   \n",
              "3  35.0  C123        S  53.1000   \n",
              "4  35.0   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass  Sex  SibSp  Survived            Ticket Title  Master  Miss  Mr  \\\n",
              "0       3    0      1       0.0         A/5 21171    Mr       0     0   1   \n",
              "1       1    1      1       1.0          PC 17599   Mrs       0     0   0   \n",
              "2       3    1      0       1.0  STON/O2. 3101282  Miss       0     1   0   \n",
              "3       1    1      1       1.0            113803   Mrs       0     0   0   \n",
              "4       3    0      0       0.0            373450    Mr       0     0   1   \n",
              "\n",
              "   Mrs  Rare  \n",
              "0    0     0  \n",
              "1    1     0  \n",
              "2    0     0  \n",
              "3    1     0  \n",
              "4    0     0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "metadata": {
        "id": "iXoj1j3LzG4L",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Age\n",
        "First we have to deal with missing values. Replacing it by the mean maybe not a good idea, since we will have a bunch of people with the same age. Instead, let's see how the ages distribute based on other feature."
      ]
    },
    {
      "metadata": {
        "id": "Mkr_2Xw817j-",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1361
        },
        "outputId": "73c19cae-6541-45c9-b997-70b843679ba5"
      },
      "cell_type": "code",
      "source": [
        "features = ['Pclass', 'Title', 'Sex', 'SibSp', 'Parch', 'Embarked']\n",
        "for feature in features:\n",
        "  fig = plt.figure(figsize = (7, 3))\n",
        "  sns.boxplot(x = feature, y = 'Age', data = combined_data)\n",
        "  plt.title('Age based on ' + feature)\n",
        "  plt.show()"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 504x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nrkJggg==\n",
            "text/plain": [
              "<Figure size 504x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 504x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 504x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 504x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n9t9tgKtAIfLvaAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 504x216 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "PPu-H9qQ5EYb",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "As shown above, using Title and Pclass to calculate the missing ages shows to be a good idea. If a passenger has the title 'Master', 'Miss\" or 'Rare' then we can fill the missing age by the mean of the according group. In the other hand, if the passenger title is 'Mr' or 'Mrs', we will also take Pclass into account."
      ]
    },
    {
      "metadata": {
        "id": "0nJ4Hfr_7Deq",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "new_age = []\n",
        "for i in range(len(combined_data)):      \n",
        "  if pd.notnull(combined_data['Age'].values[i]):\n",
        "    val = combined_data['Age'].values[i]\n",
        "  else:\n",
        "    title = combined_data.iloc[i]['Title']  \n",
        "    # Passenger title is master or miss or rare::\n",
        "    if title in ['Master', 'Miss', 'Rare']:\n",
        "      # Selects non missing rows\n",
        "      not_missing = combined_data['Age'].notnull() \n",
        "      # Gets only the age and title\n",
        "      new_df = combined_data[not_missing][['Age', 'Title']]\n",
        "      # Replace the missing age by the mean          \n",
        "      val = new_df.groupby('Title').mean().loc[title, 'Age']\n",
        "    else:\n",
        "      # Passenger title is not one of those:\n",
        "      # Chooses only the rows that have the corresponding title and age is not missing  \n",
        "      chose_rows = (combined_data['Title'] == title) & (combined_data['Age'].notnull())\n",
        "      # Gets only the pclass and age:\n",
        "      pclass = combined_data.iloc[i]['Pclass']\n",
        "      new_df = combined_data[chose_rows][['Pclass', 'Age']]      \n",
        "      val = new_df.groupby('Pclass').mean().loc[pclass, 'Age']\n",
        "  \n",
        "  new_age.append(round(val))\n",
        "combined_data['Age'] = new_age"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "5dcYWxe9GKcq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "94aa5712-d88b-4ab9-b6b0-a66ace5e537a"
      },
      "cell_type": "code",
      "source": [
        "# Double check for missing value:\n",
        "missing_values = combined_data['Age'].isnull()\n",
        "missing_values.value_counts()"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    1309\n",
              "Name: Age, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "metadata": {
        "id": "KafEF3WMOTIX",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "So far we get rid of all missing vales. Now let's see how the ages distribute."
      ]
    },
    {
      "metadata": {
        "id": "1f2HkRQ7z0Gx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "outputId": "baf8496a-f6aa-4b01-f6ac-372815e208bf"
      },
      "cell_type": "code",
      "source": [
        "fig = plt.figure(figsize = (20, 5))\n",
        "sns.countplot(x = 'Age', data = train_data)\n",
        "plt.title('Age count')"
      ],
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Age count')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABJAAAAFNCAYAAABfSJV/AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAIABJREFUeJzt3XecZFWZ8PHfAwMoQWVkyIyoq7Lg\nKuqIOSy6EmWICiZUFBOuKPvua9jAml51QcS8KMmAIEmQICKLiLsCAgISJA2DDAwDCgiYwfP+cU7R\n1dX3nrrTQ3X3jL/v59Of7q46T93nnjp177lP3boVKSUkSZIkSZKkNitNdwKSJEmSJEma2SwgSZIk\nSZIkqcoCkiRJkiRJkqosIEmSJEmSJKnKApIkSZIkSZKqLCBJkiRJkiSpygKSJEmSJEmSqiwgSZKk\nFV5E/DAi7o6I1aY7l4dTWa+3THcekiRpxWcBSZIkrdAiYlPgRUACdprWZCRJkpZTFpAkSdKK7g3A\nBcBRwN79d0TEYyPiuxFxb0T8NCI+GhE/7rt/s4g4OyLuiohrI+JVbQuJiNkRcWRE3FbOdvpO331v\njYgbyuOcGhEblts3jYgUEbP62j50VlFEvDEifhwRB5XHvCkitiv3fYxcGPt8RNwfEZ9/ODpLkiSp\niQUkSZK0onsD8M3ys01ErNd33xeA3wLrk4tLDxWYImIN4GzgGGBdYE/gixGxectyvg6sDmxR2h9S\nHmdr4P8BrwI2AG4Gjl2K/J8DXAusA3wKODwiIqX0IeB8YL+U0poppf2W4jElSZKWigUkSZK0woqI\nFwKPA76dUroEuBF4TblvZWA34N9TSr9LKV0NHN0XviOwMKV0ZErpgZTSz4ATgT0alrMBsB3w9pTS\n3SmlP6eUzit3vxY4IqV0aUrpj8AHgOeVj9Z1cXNK6SsppQdLfhsA6w2JkSRJelhZQJIkSSuyvYHv\np5R+Vf4/hrGzjOYAs4Bb+tr3//044DkRcU/vh1wMWr9hOZsAd6WU7m64b0PyWUcApJTuB34NbNRx\nHW7vi/1d+XPNjrGSJEkPi1nDm0iSJC1/IuKR5I+NrRwRvSLMasBjIuLpwJXAA8DGwHXl/k36HuIW\n4LyU0j90WNwtwOyIeExK6Z6B+24jF6N6ea0BPBa4lfzxOcgffbu3/N1UoGqTlqKtJEnSpHkGkiRJ\n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\nkiRJkiRJM1fXb2E7b9SJSJIkSZIkaWbq+i1s95G/dQ1gVWAV4LcppUeNKjFJkiRJkiTNDF3PQFqr\n93dEBDAfeO6okpIkSZIkSdLM0fVb2B6Ssu8A24wgH0mSJEmSJM0wXT/CtmvfvysB84A/jCQjSZIk\nSZIkzShdv4XtlX1/PwAsJH+MrVVEHAHsCNyRUnpque1A4K3AnaXZB1NKZyxFvpIkSZIkSZpiXa+B\n9KZJPPZRwOeBrw3cfkhK6aBJPJ4kSZIkSZKmQadrIEXExhFxckTcUX5OjIiNazEppR8Bdz0sWUqS\nJEmSJGnadP0I25HAMcAe5f/Xldv+YRLL3C8i3gBcDByQUrq7qVFE7AvsCzB37txJLEaSll+fOrbb\n9xT8855njTiTZbfvydt2anfYLt8bcSbS1NnxhG92anfa7q/tizm2Y8yek8pJkiRpWXT9FrY5KaUj\nU0oPlJ+jgDmTWN6XgCcCWwKLgYPbGqaUDkspzUspzZszZzKLkiRJkiRJ0sOhawHp1xHxuohYufy8\nDvj10i4spbQkpfRgSukvwFeArZb2MSRJkiRJkjS1uhaQ3gy8CridfObQ7sAbl3ZhEbFB37+7AFcu\n7WNIkiRJkiRpanW9BtKHgb171yuKiNnAQeTCUqOI+BbwUmCdiFgE/Dvw0ojYEkjAQuBtk85ckiRJ\nkiRJU6JrAelp/Re7TindFRHPqAWklPZquPnwpUlOkiRJkiRJ06/rR9hWioi1e/+UM5C6Fp8kSZIk\nSZK0HOtaBDoY+ElEHF/+3wP42GhSkiRJkiRJ0kzSqYCUUvpaRFwMbF1u2jWldPXo0pIkSZIkSdJM\n0fljaKVgZNFIkiRJy6VdTvxhp3Yn7/bSkeYhSdLyqOs1kCRJkiRJkvRXygKSJEmSJEmSqiwgSZIk\nSZIkqcoCkiRJkiRJkqosIEmSJEmSJKnKApIkSZIkSZKqLCBJkiRJkiSpygKSJEmSJEmSqmZNdwKS\nNJ3+6+vbdGr3ttefNeJMJEkzza4n/rhz25N2e+EIMxlvjxOv7Nz2+N2eOsJMJEl/TTwDSZIkSZIk\nSVUWkCRJkiRJklRlAUmSJEmSJElVFpAkSZIkSZJUZQFJkiRJkiRJVRaQJEmSJEmSVGUBSZIkSZIk\nSVWzpjsBSZIkScu/fzp5Uee2B+2y8QgzkSSNgmcgSZIkSZIkqcoCkiRJkiRJkqosIEmSJEmSJKnK\nApIkSZIkSZKqLCBJkiRJkiSpygKSJEmSJEmSqiwgSZIkSZIkqcoCkiRJkiRJkqpmTXcCkiRJ0tLa\n+YQfdGr3nd1fPuJMJEn66+AZSJIkSZIkSaqygCRJkiRJkqQqC0iSJEmSJEmqsoAkSZIkSZKkqpEV\nkCLiiIi4IyKu7LttdkScHRHXl99rj2r5kiRJkiRJeniM8gyko4BtB257P3BOSulJwDnlf0mSJEmS\nJM1gIysgpZR+BNw1cPN84Ojy99HAzqNaviRJkiRJkh4eU30NpPVSSovL37cD603x8iVJkiRJkrSU\nZk3XglNKKSJS2/0RsS+wL8DcuXOnLK8VxW1f2L9Tuw3f9ZllWs6Nn5vfqd0T333KMi1HkiRJWtGc\ncvyvOrWbv8c6I85Ekoab6jOQlkTEBgDl9x1tDVNKh6WU5qWU5s2ZM2fKEpQkSZIkSdJ4U11AOhXY\nu/y9N+BpKZIkSZIkSTPcyApIEfEt4CfAUyJiUUTsA3wC+IeIuB54eflfkiRJkiRJM9jIroGUUtqr\n5a6XjWqZkiRJkiRJevhN9UfYJEmSJEmStJyxgCRJkiRJkqQqC0iSJEmSJEmqGtk1kCRJkiQtv/Y+\n6eZO7Y7e9XEjzmTZ/NdJd3Ru+7Zd1wXgayfd2an9G3adM6mcJGl55BlIkiRJkiRJqrKAJEmSJEmS\npCoLSJIkSZIkSaqygCRJkiRJkqQqC0iSJEmSJEmqsoAkSZIkSZKkKgtIkiRJkiRJqrKAJEmSJEmS\npKpZ052AtLw67ys7dGr3kreePuJMJEmSpOlzwdF3dmr33L3njDgTSaPkGUiSJEmSJEmqsoAkSZIk\nSZKkKgtIkiRJkiRJqrKAJEmSJEmSpCoLSJIkSZIkSaqygCRJkiRJkqQqC0iSJEmSJEmqmjXdCaib\nxV/8107tNnjnR0aciSRJkqTpcOZxv+rUbrtXrzPiTCT9NfIMJEmSJEmSJFVZQJIkSZIkSVKVBSRJ\nkiRJkiRVWUCSJEmSJElSlQUkSZIkSZIkVVlAkiRJkiRJUpUFJEmSJEmSJFVZQJIkSZIkSVLVrOlO\nQDPHLZ97Xad2m7z7GyPORDPd8Udu27ntHm/63ggzkSStCOaf0G1fccru3fc/y5PdT7y0U7sTdnvm\niDPRsvj2ib/q1O5Vu60z4kzGO+eYOzu1e9lr5ow4E0nLO89AkiRJkiRJUpUFJEmSJEmSJFVZQJIk\nSZIkSVKVBSRJkiRJkiRVTctFtCNiIXAf8CDwQEpp3nTkIUmSJEmSpOGm81vY/j6l1O2rCiRJkiRJ\nkjRt/AibJEmSJEmSqqargJSA70fEJRGx7zTlIEmSJEmSpA6m6yNsL0wp3RoR6wJnR8QvUko/6m9Q\nCkv7AsydO3c6cpQ0zY4+6hWd2u39xu+POBNJkpZvrz7x+k7tjtvtSSPORFrxLDr49k7tNj5g/RFn\nIo3WtJyBlFK6tfy+AzgZ2KqhzWEppXkppXlz5syZ6hQlSZIkSZJUTHkBKSLWiIi1en8DrwCunOo8\nJEmSJEmS1M10fIRtPeDkiOgt/5iU0vemIQ9JkiRJkiR1MOUFpJTSAuDpU71cSZIkSZIkTc50fQub\nJEmSJEmSlhMWkCRJkiRJklRlAUmSJEmSJElV03ERbf0Vu+YLO3Vu+7fvOnWEmYz3v4ft2Lnt8/c9\nbYSZjPe9w7fv3Hbbfc4YYSaSJEnS8uUXX1zSqd1m71xvxJksu9sPWtCp3fr/9ITJL+PTP+/cdv33\n/d2kl6Pll2cgSZIkSZIkqcoCkiRJkiRJkqosIEmSJEmSJKnKApIkSZIkSZKqLCBJkiRJkiSpygKS\nJEmSJEmSqiwgSZIkSZIkqcoCkiRJkiRJkqpmTXcC0jCXf2mnTu2e/o5TH/r7p//1yk4xz37bdyeV\nkyRJkqbHISff3qnde3dZf8SZSDPb7Qf/olO79Q/YbMSZLJslh/5P57brvecFI8xEnoEkSZIkSZKk\nKgtIkiRJkiRJqrKAJEmSJEmSpCoLSJIkSZIkSaqygCRJkiRJkqQqC0iSJEmSJEmqsoAkSZIkSZKk\nKgtIkiRJkiRJqpo13QnMNHd++b86tZvz9rcBcMeXD+3Uft23v2fSOWnFcc5Xd+jU7mVvOX3EmYx3\n8hHbdWq3y5vPHHEmkqbCDicd3Lnt6bseMMJMxtvhxG77YIDTd3vbCDOZaMcTvtap3Wm7v2HEmWim\n2+3ECzu1O3G354w4k+XDR06+rVO7f91lwxFnoql2yeF3dGr3rH3WHXEm4y347O2d2j3hH9ef9DIW\nf2pRp3Yb/PPGk17GVFnymUs7tVtv/2f2xVzUMWarSeU0WXd87ged2q377pdPfhlfOK3bMt6146SX\nMUqegSRJkiRJkqQqC0iSJEmSJEmqsoAkSZIkSZKkKgtIkiRJkiRJqrKAJEmSJEmSpCoLSJIkSZIk\nSaqygCRJkiRJkqSqWdOdQFd3fukbndrNecfr+mKO7BjzpknlNFlLvvSJTu3We8f7R5yJVkSnHbFd\np3Y7vvnMEWcy3jFHbdOp3WveeNaIM1lxfeS4bn38r6+e+X28+ynbdmp3wvzvTXoZ253y9k7tzpz/\n5UkvQxq1HU84vlO703bfY8SZjLfTCad3anfq7juMOBNJk/Gjr9/Zqd2LXz9nxJmMd8Vhd3Rq97R9\n1x1xJprplnz2vE7t1vvHl0x6GXd8vvs8dN39us1tG5fzhZO7LeNdu4zFfPHb3WLe+aqlysUzkCRJ\nkiRJklRlAUmSJEmSJElVFpAkSZIkSZJUZQFJkiRJkiRJVdNSQIqIbSPi2oi4ISK8UrQkSZIkSdIM\nNuUFpIhYGfgCsB2wObBXRGw+1XlIkiRJkiSpm+k4A2kr4IaU0oKU0p+AY4H505CHJEmSJEmSOpiO\nAtJGwC19/y8qt0mSJEmSJGkGipTS1C4wYndg25TSW8r/rweek1Lab6DdvsC+5d+nANc2PNw6wK+W\nMoWpiDEv85ppMeZlXqOMMa8VI6/JxJiXeY0yxrxWjLwmE2Ne5jXKGPNaMfKaTIx5Ncc8LqU0p9Mj\npJSm9Ad4HnBW3/8fAD4wyce6eCbGmJd5zbQY8zIv85o5MTM1rxVpXczLvMxr+Y4xL/Myr5kTM1Pz\nWpHWZabm1fQzHR9h+ynwpIh4fESsCuwJnDoNeUiSJEmSJKmDWVO9wJTSAxGxH3AWsDJwRErpqqnO\nQ5IkSZIkSd1MeQEJIKV0BnDGw/BQh83QGPOaecuYTMxMzWsyMeY185YxmRjzmnnLmEzMTM1rMjHm\nNfOWMZkY85p5y5hMzEzNazIx5jXzljGZGPOaecuYTMxMzWsyMea1jKb8ItqSJEmSJElavkzHNZAk\nSZIkSZK0PFnWq3CP6gfYFrgWuAF4f6XdbkAC3l3a3wosAn4OXAJs3df2VcDVwFXAMWUZvwT+CNwG\nXAb8Adi5tD+k3HYZcB1wT19eqS/m1L5lzAXOBX4GXAFsX2Ju7lvO5cAufTGPA84p7X8IbFxu3xK4\nA3ig5PXqhvUP4LOln64AtivL763nezrEPBe4qOR1FfAfDTGrAceVmAuBTcnXsPoZcFrH9gvL83IZ\nDVeAb8jrmcBjgBOAXwDXAM8bErNL33N2GXAvsP+QmIPKel8JfAt4RId1eU9pf9Xg4/ct46q+5+6Z\n5fbZwNnA9eX32gNxR5TnfFFpcz3w+fJYfwHmtbS/krGxeXe57QrgZOAxLTELGXuN9cbfZcD3gQ07\n5LV3ue8A8uthnZa89u6PaWo/EJP6nr/ea7r3//Yd1uX95O3BL0q/fWpIf93H2Gt5IXBZh2UcClxQ\nYi4GturQX/8C/IT8Gvgu8Ki+9psw9rq9GVhSlvMfbeNlIGYRcGdp986mmIH2vfF0GXAT+XXSNL7a\n8jqv9O+EMVaJaRxjDXl9o+T+a+CWwfYNMams/0PbYprHZFt/NY7jSn/dDvyehjFZWffamGyLubxv\nGQvpG5eVmMZxWenjm0vchHFc6eMf0j6OH8HYvuRm8tfE3gB8krztvIG8LV21of1V5DFyA7Cg9NW4\n9gMxV5fn5PaS1/mlfdO2pX85i8hj63rgf8mv6SvJr9lVWvL6Tml/L7B4sH1DTOrL6+Zy2xXkfdma\nLTFLgLtKPtuU+z8L3N/Svr+/rgW2GWw/pL+uJb/2e2Nsyw79tTfwMfJ86BrgH4f01/XkL0kZ135I\nf/26L6fbgO90yOuTwKUl5sfA3wzpr1tK3JXA0cCshn34yuW5+21pewANY3ig/c/KelbHcF/ME8pz\n8huGjOFKXo1jeEjMebSMyZZ1aR1fAzG3lWVcS95mN46vSl7n12L68uqfI1zXNL4qy7i2bXxVYhrH\nV6W/quOLsbnwzeT5Yet+e0hM69xwIObGEjNs391r3+vXa8nbpMW0zw2b8mrcpw6JOZmWuV4lr980\ntR+I+RPwO8b2cY374Up/1fbDTXn9svy0zQ2b1r11blhiesdBt5CPIxdRnxv2HzfdVuIWl7i2sdK0\njNaxUokZdizRi7mtPDe31MZLy7r8mnyc0/bcN+VVm4M9pe+xbgQeJM8PG/t4oP1l5PngnSX2ypbn\npD8mlWXcSv5isbbju7a83l/pr/cydjx7AXkM31TiW/dFJfYD9G3vm9qMaz+swXT8kDfGN5J3rquS\nX8CbN7RbC/hR6aRFpf2zS+dtDjwVuLW0fRJ5A98bAOs3LON55I3S6g3LejdwZF/M/U15kT9X+I7y\n9+bkjcWN5e9HlpgXkw8uZ5V2xzP2Atoa+Hr5+8nAa8iFlF+QNwCDL+DtgTPJBYvnkndyz+zrn+sa\nchyMuZAygQBWKf8/dyDmncCXy997lkH4PnIhrqmA1NR+IS2TokpeRwNvKfev2mH9LxwYR7cDj6vE\nvJK8EX9kue/bwBuHrMuZ5Bfn6uTriP2AiROK7cnj8pnl+b+w3P4pxl787wc+ORD3YuCl5A3rbGBt\n8kbw2eQDt8ENzIvLMq5kbGxuTxmb5IlP0zLmkTesvfH/8944Af6xt75D8lpAfo2dRd4ZrtOQ1zWl\nXS/mZvIOZlz7gZgH+247EPhVmqsuAAAcs0lEQVSnyphpWpcbyDvj1UqbdYf010PbGOBg4N86LOM+\n4G19z/UPO/TXH4Adyv1vBj7S136DktfKpb9uAp5O3k58umm89MXMLu1vIL8G7qEUgftjeu37tg1/\nKev8t+Qd1Q+ZOL7a8roR+LvSZtwYq8Q0jrGBvOaWPnte+XtB6btxY3Ig5n76tnPkwkfTmGzrr8Zx\nXOmvA2kZk5V1r43JtpiH9i8MjMtKTOO4rPTxf5P3K2szMI7b+pg84XlJyzgOYE3G9uGXAS8kj8kD\nSpsvM7aPDMb2PU8jH7C9CDidXFBZub/9wDI2Jb+OLyzP4zMYe6NicNvSi5ld+uti4B/61j3Ibx40\n5bUu+bX7CvKbUL0x+VD7hpj7+/LqL7B9mr43xPry2rw83xeR3wS5EdgK+DrjC0ht/fV48hzoG0ws\nILX111HA7i3juK2/7gCOBVbqH8eV/noXeUzObhj3jf01kMeJwBs65PUn4DmlzTuBoyr99RLygcgv\nyePrw8A+DX3woZLXWeX5vr/XjoExWW57H3Aauci4GpUx3BfzEfJr47Tyf+sYruTVOIaHxNzE2Fx4\n3JhsWZfW8dUX80nyQd0Zpf29wKua2lbyuo8yF25p35tzPlD+fxPwNQbG45BlLOhb93HjqxLTOL5a\n+usRw8ZXeX7/hvFzo8b99pCY1rlhX8y6jJ/r1PbdC4F1GH8M9ljG5kdNc8OmvFrnhpWYu4F/bXne\nm/L6SOnnCceGAzELGdun/z15vj5hP1zpr9p+uCmvs8t6bU7z3LBp3VvnhuW2o4G3lmU8BZhDfW54\nNPAWxraTmwLPKePlxy1jpWkZrWOlEjPsWOLocvsCYD3yCRS1Y4mmdfkEuYi09uB6VPJqnYP1xfWe\nxzvLc9Tax30x65BPFHga+Q28X5fntLF9ibmfcmxKZf5dyetycq1gcM66EXnb/sjSX/eT98Enk/dF\na9O+L+rNQXrb+xuBlWvb75n6EbatgBtSSgtSSn8iT1jmN7T7CHlQrwrcUtr/lLyTm08uJD0yIlYj\nD6YvpJTuLrGPb1jG/wHOTCn9rmFZe5ELUDeklBaU25rySsCjyt+PJu9QbkgpXZ1S+n2J2bG069mc\nPJGH/I7vfICU0nUppWPIRa0HyIN5zsDy5gNfS9kFwBrkCQUppfvIB/AbDYl5DPkACXIBaZWB/Hox\nR5e/TyBP2nYAvkqzwfYva2lXy2s2eYN/eFmfP6WU7hm2LhGxQbnvZcCNKaWb22LIBbeVgU0jYha5\nKHTbkHV5Abkg9LuU0gPkKv2uDTGHkp+73/fl1f9YRwM79wellH4E/B15knZXGa9nkDcaE5T2d5E3\nGL3xfAZjY/MCYOOGmE2AP/WN/2MYG8trMPD8t+R1Nvm5+eeW9neRJ/tn98U8SH5XYnB89cd01rIu\nvwOuSin9sbS5Y0h/9W9jXkWehA9bxmLygQjk1/ltDTGD/RWMbRvOJp892Wu/OKV0KXnbdz35HZx1\nS8wfSrNx46UvZhtyn17F2Ov49sGYvva9bcNfgI1SSteklK5t6d+2vL5K3o7BwBirxDSOsf68yK+t\n28gHfb8s/bQtA2NyIAbGb+cOoXlMtvVX4zhu66+mfuqw7rUx2RZzLDA/IoKBcVmJaRyXbX0M/Ln0\nw7YMjONKHz+Z/MYNTBzHKaV0f8lrQemzP5P3KY8ozfrHZK895bZ7KAdr5MnMVkwc9/0xUR47pZR+\nllJaSIO+mG3I+9iVyPvmU4Fty77gIso4HljGduQD29+klL7N2Jh8qH1DDH153QtQnsdHMn6M9WLm\nkw9mZ5GfgxuAL5HHZNN6DPbXL8tjH1tZ93H91dRPHfoL4IKU0l9Kuztq/UU+Y+m08jiD476xv3r/\nRMSjyJPk73TI63fkOQmMH/dN/fUH8j75GvL4GjeGy7I3Js/5ziWP33vI84TGbXFpvwP59XcrQ8Zw\nX8zW5APn3vq1juGmvMp+pXEMD4n5PrBt05gcXJeyzWodX30xu5HnR39JKd1EHgON85ZKXreRz7xv\naz8453wH8OHB8ThkGWeXdZ8wvioxjeNrIK/ec78WQ8ZXsTXj50bQsN8eEtM6N+zzTMbPdVr33X36\nj8F+zdj8aMLcsCWv1rlhJaZ3sF/zUF7kueRlNB8btnkH8Imm/XCfwf5q3Q+35PUXcr/Op2FuWAyu\ne+vcMCIeTX5D8sqyjGtTSnfSMjfsa384eTt5dkppYUrpQvJ4mT2YTGUZrWOlEtN6LNEXc2fJa0nK\nx2eN46VtXcp6X0feD3ddl9Y5WJ+tyNvj61JKN7T18YD3Ab9KKV1R8jmj/G5rD6UglFK6OVXm35W8\njiUfXza9vmaRt9XbkYtZN5DfZDplSF7zgWNTSn8s2+8bynJbzdQC0kbkSmnPIgYm7hHxTGCTlNLp\n5IrZkob2uwGXlgHzZODJEfE/EXEBeYM/uIytaNg4RMTjyAWn2/tiHkEuSr0nIvqfjAOB10XEIvJA\n+kYvJiKeQ64G7g+8PeXiA+RJRq8AsQuwVkQ8diCNRzL27kG/1r6KiE3J72hd2CFmk4i4jFykOrts\nbBpjSt6rAh8nbyybDLb/DfnF+P2IuCQi9q3FFHeRJ4dHRsTPIuKrEbFGh3XpjZU9ad7Y9+d2K7li\newl5AvCblNL3h6zLPcBLIuKxEbE6+V2GTTrmtV5KaXG57XZyBX7Q+uRJa9M6tVmlZXlvJp8x1WUZ\nu0XELcBrgX/rELMmuahyeSWvWYyN//nk1+mD1TWBlSLi4vI63QzYLyKuiIgjImLtDnk9GnhaRFwY\nEedFxLMbYpr669nAkpTS9R2WcTjwytJfB5FP/RwWs4T8rjzAHkwcM5Cfs7sZe92uztjEom28bESe\nrPdiViPvuFtjyrZhZeCTEXHBwDasyWBe/WOybYw1xQwbY08lF7R725/NyAfSbe0hb4u3BT4eER8n\nH/TUxuRgfw0dx/39RX437J+HjMnBde8yJtv6+EW0j8vBmC7jsr+P9yefXfelSnvo62PydrI3QZww\njiNiZfIk8qXkieGN5HfCeoX9cduziFi57Hv+hVzQv5G8jb2ltGva/69M3r9uXu77VES8qCX3/piD\ngNcxto9bBGwUEasArwe+15DXYcA1ffvERWWdx7UfiFmjrO+hEbFzRBxJfi1uBnyuIa/3AR/sy+tR\nwBV9+4qmZfwLeX5zIbAfuZD4iMH2bf1FLjh+rIzjQ8obbcP6a01gm7J9PjMinjSkv55Ifof2U4Pt\na/1V7t4ZOKdXgBuS1wnAB8q86/Xkd6gb+4tcZJlFPjDYCNididviz5DHbu8g47HkA5DGMVza/3NZ\n1z+U9tUxXGL+H3k/8aKyXaiO4Ya8HsqlaQwPiXkvzWNycF1gyPgqMZcMLOO3wLvaxldLXr8FXtsS\n08vrL5Q5Anm7d2DTeByy7hvRMr5aYlrHFxP761cMH1+JvD/bsW8uPGy/3RQzbG6YgC8Cz2qJGdx3\nJ3Jx8RvkuUfPc8nbp6b9cFNew/apTTH3Atu37Ffb8no2cEDLfrgXswFwSURcQj7r9kWV/XCtv5r2\nw0157U+e532Q5n1q07rX5oaPJxdcPl7y6h0Htc0Ne+2PLMt/Vt9x0yLyOBvUtozaWKnFtM3zejHv\nI89TejFt46W2LpsBBzc89215dZ2DrcXYcWOX+ffLyWdlU+6/rjxOW3vIz8HGHefeTXmtSy7Uj+uv\ncjx7ELng/1/kfdAlDN8X9ZZRrbsMmqkFpKqIWIl82u0BlWazyZP9t5X/Z5E/xvZS8rsLbycXQXoe\nTd7pn9XwWHtS3lnpu+1xwL+TNx6fiYgnltv3Ip/eujG5sPDuXkCZ6HyA/JG1D0REb2f8T+SCxM/I\n7x7fyviD7Dnkyu+beu+0DBMRa5Lf0dy/YQfZ5C8ppS3LcraKiKdWHnvHkl/tIK3JDimlZ5Iro++K\niBcPaR+UA8iU0jPIk4v3d1lQRKwK7ETu61q7tck7/p2ADYE1IuJ1Qx7+z+QJ1/fJk7XLGF4UmaC8\nY1h9J3gZPYt85to3O7a/IKW0SWm/X61hKZy9mObXS1v7D5I/vjbMtSmleeSPbz6f/M7fluQD14M7\nxK9Enug+l3xW4bcjIjrEPYnmgmOTrYEfl/56L+UsuSFOBp5fJjJrkd+lHvQI8g5pwuu2Ml5WJW93\nOsX0bRveWl6PryFPgtsODlrziogP0T7GmmJax1jJa2/gjL72PwA+2tS+L+bqsv57k/cJR1TWA/r6\nq+ReHccN/bUL+WByV9rH5OC6dxmTbc/9XrSPy8GY6rhs6ON3kCeFH21q3xfT6+NXk8fuAW3jOKX0\nYFnHb5HflNmsJfeH2pd9z1HkgkO1fd8ynkH+yMDVwBeAYyKfVVCLOQT4Tybu474I/CildH5DXh8h\nT/b62+862H4gZnPyx84PJL+2Pkrev1xD7sPBvI4jn9a/VdkvPp7mouyE/irt9yj9UFv3wf56OvkA\n7Nnk+dL/bYgZ7K+VyWdlzAO+Qt9rraW/ViO/xg4dbF/rrzKfahz3LXk9Hzi8zLuOJM8PG/sL2II8\np3sOuYBzH3377zK/uYM8Dxuq1z6ldEmX9gPLOJs8Hs6nfDyrbQx3yGvCGB4S820GxmTTukTEhlTG\nV98y7hy462LytSInjK9KXmeTi5vjYhry+u8yBv9Enme/moHx1aG/JoyvSkzj+Grqr7LPbR1fxQvJ\n24Wv0TAXbtnXV2NavJBc3PreYEzLvvuFZR/3MWDzvvYnkM9caNoPN+U1bG7YFHMRub+a5npNeX2J\nvL8/tqF9f8yzKR8PJM/1n0r7fri1v2jeHjXl9Y7ST0fTvE9tWvfa3HAW+ayos8hny004DhoYL732\nXyJvJ/802L5BdRktY6UW0zbP68X8hLy9+i15m982XtrWpff/IUx87tvy6jIHm0U+tp9w3Ngyl16V\nvD+5skv7vph7yHOj1zC+ftDmobzKsdQrmXhiSO94dj55/vBh8hvlE87SerjM1ALSrYyvwG7M+A36\nWuSNwA8jYiH5FM5tI2JeuX9z8kHnG1JKvTN2FpEvsPrncnrWTeQDxp5tgJ+nlPrPGOjpncnyUF6l\n0rcxeef7Q/LkDGAf8o6ZlNJPyH3cPzg2Jg+2+8s6kFK6LaW0aymSfKjcdg88dBr3keTK9wUd+2oJ\n+YDnmymlkzrG3Nq33HOZOOj6Y15IrhhfTN54bx0R32hrH/mjYY8mf1Sid+rgyUw8PW4wr9nA4r53\nfk8gbxi6rMt25HdnlzBRf8zLyc/RVeW5P4k8WRi2Lp9NKT0rpfRiyqmFHfNaEuUjduV302mUt5Nf\n+IOxNX8eWF6vIPbasiFbmmV8k+ZTrvtjeu8sv6e8BjcGLo2I9QdiHih5PZG8UXsPeVLY1r4XQ8qn\nA/838PRSOP0KzadUDq7L78kfMUwppYvIhd91BmIG+2su+bPVxzU8ftMyXsLYx3iO75jXI4ADU0rP\nIm9Pxp1NGPkd5P3Ip8P2Xre/o3x0pGm8lJhXAzf3xfyRvNOcEFPa97YNX4WH+vmHjH38bZyWvDYm\nv7uyIw1jrBLTOMb68jqXPOFmIGbCmOyLOaosY2Xyc31225hs6K/qOG7pr5+W/tqShjHZsu7VMVnp\nr8XkYsWEcdkS0zouW/p4b/L4unWwfVMfl7FyNnBo2zgubiWPj3PJ7/quWdalt15N27Obyu3PI58h\ntUn5v7F9GjvV+lzy6/dG8pnGNbeS35Dp7eM2Jh/ozSEfwDe5kXwqeG+fOJ881trak1K6pizjqZT5\nQSl8HEvztvVW8htY55I/tr02+WychcDqEXFDQ0yvv/6ePAfai/zGRmP7hv66HnhyymdoH0nzNmyw\nv35HLupC3oc/rSGmv78WkfePt1baN/XXi0s+pze1H8hrO/I7pT8p9x3HxH04jPXXtmVudjnwBvLr\npX///QLy/vP/kvt0a3IBbHWax/ALgJ3Kc/Vy8gHFodTHcG8Z15LP2NqafLBZG8MT8irzrtoYrsXc\n2jAmm9blKurjq7eM15KLoL1lPJaxj8ANjq+2vB7TEtOf17Hkg+3e2f3/TZ5/D46v2rrfS/P4aoo5\nnfbxNaG/IuIbQ8ZX7/jhVvIctzcXbt1vV2Kqc8O+mDkDMY377tIe8nHN3Yz1f+t+uCGvlzBkbtiy\nLmsDi5rmek15lbn9RuVxJuyHezEpf7ToZPLr6lZywa9xP1zpr8b9cEt/7U2e+zXuU1vWvTY3XMTY\nBa03Yew4qG1uuKj044VlOXcydty0MXmcDWpbRm2eV4tpO5boxfxkIKZtvDSuS99zv4iJz31bXl2O\nC+aSLzvRO26szr/J+54bGftY4BLKOKsc321H/hKpJX1z72c0tGvL64nks1b3aOivlwM3pfyRvVvI\n4/AFdJhPMbzuMlGqXCBpun7I1bYF5APO3kXMtqi0P488YB5PfuH/noFvH6N89i+NXfTqFvLFzHrL\n+C35DJ/Bx96stIu+vJ5OnhBfXp6c6xm7aNiZlIswky+OdVuJeRFjF9F+ebl9nb58ehcB/Bj5M92U\nvM4hVxKvbFn3HRh/EemLyJXtz1T6azDmUsrFqUuO5wM7DsS8i/EXkv52+fulNF9Ee7D9icBa5f81\nyN8csm2HdTkfeEq5/0DgP4fFlNuPbXo+G2LeTN5IrF7+Pxp497B1Z+zioXPJ75wOXty7t4xNyRuY\nXl7/yfiLaH+qIb+nkyvtazN2wcvZtF8ocVNyUbL3mtmRfPr0Cytj4IllGb3xfw3lNUY+a+6ErnmV\n+xYy8UKJm5bHvalhXSa0LzFPIxfzIL8uFjD22nov+TO6w9ZlEfmsNcgb81uAqPTXquXvny5Ff/2B\nsdf5y4BLOvTXzWXdVyK/Rt/c1zbKbYcO5DV4Eb9PNcR8aaCPBy/G+amB9p8p7Vbr6+frya+3wYto\nt+W1gDyu5zSsd1tM4xgbyKt3geu1yWfQ9cbLuDE5sO6D69EbLwsZfzHGtv5qHMeV/tqitxwGxmRl\n3VvHZCXmcmBf4Lyl6OPGcVnp42vJk+PZDIzjSh/3LhDaNI7nkCcrs8oyLmLs2jP/VNp8GXhnf/vy\n9zPJb6zszMQLEL+zYRlzyPuS88lv3PQm5eOe94GY3v0/IRcS7yw5PrKpffl7w9KvryYfIP+BgW+W\nGVjG2uQ3Gc4nv8O4sPRXkE8vP6ghZgvydax+XNZlAeUCloy/iHZbfz2+F8PEi2i39VfveY8yLj7R\nob/uoewfyfv+nw7pr0NKH8/ubz+kv64n7+uPrvTxYF4PAs8ubfYBThzSX/NKfz2SPMfaumFZs0sf\n9S6k/FvGX0T7nQ0xb6T9ItpN7eeQi0enkc8Oax3Dlbwax/CQmFv6nvtxY7JlXVrHV1/7LcjXzehd\nRPvm0n7C+Krk9UtaxmRfzI7kMyghb/+WkF9f48ZXZRk3kQttE8ZXS8w6beOr0l+t44v8Glyr73m+\nkPwxt8b99pCY1rlhX0xvW3xJ6bvGfXevffn7UeTX8N6MXVx3Cybuh6t5De5Th8T8si/mof1qJa+5\nfXkN7od7y1iDXAD5X3Lh/0bym0EwcT/c1l+N++FKXr1v4tuCifvUtnVvnRuWuPPL87CA/Lo4mPrc\n8Hzy9aRmkwtbn2Vs7LddRLtpGa3zvEpM9ViixGxVcvlEya02XprWZTPGxv6E44KWvKrHBeX240q/\nDp1/l9uOJb+J15tPfZZ86ZXZTe1LTO9sduibs1K/iPZgXg/VRBg/Z30OueC/esnhPvIZdd8p8bNp\n3xdtwfiLaD80B2ndTtbunM4f8mmp15XB+6Fy24eBnRra/pA8sbuO/M7Xnxj7uuUFjF2M9tPk03B/\nTi4E9JZxM/kaPSsNLoM8kfnEQF6/JFdxF5fHOrUXUwbC/zD21Y+vKDGLS16LyQWb4/pidi+D6Dry\nRct6k/XXMXYR0lTiDyR//O7tpU2QT0e/seSyT2l7BX1fcTgkZk/yBcKvIB9Y/9tgf5Mr5MeTN4wX\nAU8ot7+UsW8QqbV/SemTy8kDvPec1vKaR36X/+KS23fIL9JhMWuQx8Gj+563Wsxh5CLQleRvvVlt\n2LqTN1BXl/V5WcsyriOfTZPIk5x9yO/KnVOe7x8wttGcV577b5HHyAPlZwn5Xb9F5DG3BDirxGxI\nLkQuJo+RX5HHfO+in73n/8t97c8YWMafGfta+ytLP3+XfHHlYXm9qa9/FzK2EZtX+raX112Mfc34\nm1ra95bxK8bG+iLyjv/nJa9TgQ06rMu/kT+TfiX5tbb1kP66sbR7+8B2pbaMw8gTjMvJk4Bndeiv\nbzL2lcOfYGzisiH5QKj3ur2RPBlZTP7oS9t4+W5fTG+bdBt5h9YU079tuI5caF9A3v7dRfP4asvr\n1+QdcNMYa4tpG2OD26xflvW4v4yBpjHZW/cbynr8njym9qmMybb+ahvHbf11d19eg2Oybd1rY7It\n5kPkj900jcu2mLZx2dbHi8o6N43jtj7+Fu3j+HzG9iULya+xG8kHqReVxzqesX3cu0vevX3PD0r7\nBeTi1mD7ncgToJ+Vx++t96Xkz/wvIr/ebgO+2rcuJ/bltYixi0s+yNi3xV3G2L5vz5J7L6+TGft6\n9Tsa2vcv44aS1+3kbdf15feV5G3AoxrW5Qrya++ust7b9T3f/QWktv56KGagfa2/Lu/L6xuMfVtZ\nrb/eSS6M/Jw8Bp8+pL8W9C2nv32tv/Yhz+kG32Cq5fW5Ent5iX3CkP66i/wauJb88c/+ZXy17/9P\nkgtHN5An4k1jeCfG3vR7KXkuMWwM99rvRj74+A3Dx3BbXm1juBZTG5NN61IbXx/u+/+rZRnXllza\nxldbXtcMiyG/oXcvY3PJK2geX23LeBPt46stpm18tfVXbXwdx9hc+FbGxnDbfrsWU5sbntsXczNj\n2+K2ffdzB/r1aPI2/v7y2E374ba8anPDtpi2uV5bXveRtxlN++Heul/D2DbvKur74bb+atsPt+XV\nO8OoaZ/atu61ueEZjB0H3VSej5uozw1PYuy46VLytmgx7fO8tmXU5nltMcOOJXoxt5SYBdTHS9O6\n3Ev7HKwtr9pzfwZjx427M1Z7qPXxUaX9o8knIvT2d1e3tP9qWcZvyOOlt1/8PO2v4ba8PlTpr0sZ\nO57935LXwpJb676o/P8hBrb3tZ/eIJUkSZIkSZIazdRrIEmSJEmSJGmGsIAkSZIkSZKkKgtIkiRJ\nkiRJqrKAJEmSJEmSpCoLSJIkSZIkSaqygCRJkrQUImLniEgRsdl05yJJkjRVLCBJkiQtnb2AH5ff\nkiRJfxUsIEmSJHUUEWsCLwT2AfYst60UEV+MiF9ExNkRcUZE7F7ue1ZEnBcRl0TEWRGxwTSmL0mS\nNGkWkCRJkrqbD3wvpXQd8OuIeBawK7ApsDnweuB5ABGxCvA5YPeU0rOAI4CPTUfSkiRJy2rWdCcg\nSZK0HNkLOLT8fWz5fxZwfErpL8DtEXFuuf8pwFOBsyMCYGVg8dSmK0mS9PCwgCRJktRBRMwGtgb+\nLiISuSCUgJPbQoCrUkrPm6IUJUmSRsaPsEmSJHWzO/D1lNLjUkqbppQ2AW4C7gJ2K9dCWg94aWl/\nLTAnIh76SFtEbDEdiUuSJC0rC0iSJEnd7MXEs41OBNYHFgFXA98ALgV+k1L6E7no9MmIuBy4DHj+\n1KUrSZL08ImU0nTnIEmStFyLiDVTSvdHxGOBi4AXpJRun+68JEmSHi5eA0mSJGnZnRYRjwFWBT5i\n8UiSJK1oPANJkiRJkiRJVV4DSZIkSZIkSVUWkCRJkiRJklRlAUmSJEmSJElVFpAkSZIkSZJUZQFJ\nkiRJkiRJVRaQJEmSJEmSVPX/ARzSc6aq1n9IAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 1440x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "TBoNDJfiRJMj",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "The distribution looks quite weird compared to normal age distribution: ![normal age distribution](http://www.censusscope.org/us/chart_age_graph_1.gif)<br>"
      ]
    },
    {
      "metadata": {
        "id": "R9xoRMfZadoz",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "To make the distribution looks more reasonable, we will group 3 consecutive ages to one."
      ]
    },
    {
      "metadata": {
        "id": "RvqxNOr2apkC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "outputId": "66571355-07c2-48d6-af2b-60ac8f08066b"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Age'] = combined_data['Age'].apply(lambda x: int(x / 2))\n",
        "fig = plt.figure(figsize = (20, 5))\n",
        "sns.countplot(x = 'Age', data = combined_data)\n",
        "plt.title('Age count')"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Age count')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nIZP1zXj2WAIAAABgFIUlAAAAAEbZ6QpLVfWQqvpyVZ1fVc9d9HgAAAAAWN5OdY6lqtoryV8leWCS\ni5J8pqpO6+4vLnZkAAAAsOu49KXnT9r/Tf7w1yftn13HzrbH0t2SnN/dX+/unyR5e5LDFzwmAAAA\nAJaxU+2xlORmSS5ccv+iJHdf0FgAAACAndxlr/gfk/a//7PutWz75a88Y7LMGz/zgctn/tV7p8t8\nxrj9eqq713ko41XVkUke0t1PGe4/Lsndu/u4JY85Nsmxw93bJvnyyLj9knx7B4a7q2QuKndPyVxU\nrm3d/TIXlbunZC4q17bufpmLyt1TMheVu6dkLirXtu5+mYvK3VMyF5VrW3e/zB3JvUV3b1jLA3e2\nPZYuTnLQkvsHDm0/190nJDlhR4OqanN3b9rRfnb2zEXl7imZi8q1rbtf5qJy95TMReXa1t0vc1G5\ne0rmonL3lMxF5drW3S9zUbl7Suaicm3r7pc5r9yd7RxLn0lycFXdsqqukeSoJKcteEwAAAAALGOn\n2mOpu6+oquOSfCjJXklO7O5zFzwsAAAAAJaxUxWWkqS7T09y+hyidvhwul0kc1G5e0rmonJt6+6X\nuajcPSVzUbm2dffLXFTunpK5qNw9JXNRubZ198tcVO6ekrmoXNu6+2XOJXenOnk3AAAAALuOne0c\nSwAAAADsIvbIwlJVPaSqvlxV51fVc+eQd2JVXV5V50ydtSTzoKr6aFV9sarOrapnzSn316rq01X1\n+SH3T+aRO2TvVVWfq6r3zynvgqr6QlWdVVWb55E55O5TVe+uqi9V1XlVdc+J8247bOPW2w+q6tlT\nZg65zxn+hs6pqrdV1a9NnTnkPmvIPHfK7VxuXqiqG1bVGVX11eHnvnPIfNSwrT+rqnW/WsQKmX8+\n/P2eXVWnVtU+c8r90yHzrKr6cFXddOrMJev+oKq6qvabOrOqXlhVFy95zz50PTNXyh3anzn8bs+t\nqj+bOrOq3rFkOy+oqrPmkHlIVX1y69xfVXdbz8xVcn+zqv5x+HfnfVV1/XXOXPZzw5Tz0iqZk81L\nq2ROOi+tkjvZvLRS5pL1U81LK23rZHPTats61by0ynZOPS+tlDvZ3LRK5tTz0rLfK2p2oadP1ey7\n3DtqdtGnqTOPG/KmeM+slPmWmn1nPadm/y5cfU65rxvazq7Zd47rziHz9VX1jSXvnUPmkPkPS/K+\nVVXvWa/Mq8h9QFV9dsj9RFX9+nrmDhm/9L14yvfMz3X3HnXL7KTgX0tyqyTXSPL5JHeYOPO+Se6S\n5Jw5bucBSe4yLF8vyVem3s4hq5Jcd1i+epJPJbnHnLb5PyV5a5L3zynvgiT7zet3uiT3DUmeMixf\nI8k+c8zeK8mlSW4xcc7NknwjybWG++9M8oQ5bN9vJDknybUzOwfd3yb59YmyfmVeSPJnSZ47LD83\nyUvmkHn7JLdN8vdJNs1pOx+UZO9h+SXrvZ2r5F5/yfJ/TPKaqTOH9oMyuyjFN9d7zlhhO1+Y5A/X\n+zVdQ+6/Hd4z1xzu33ger++S9S9L8sdz2M4PJzl0WH5okr+f0+v7mST/Zlh+UpI/XefMZT83TDkv\nrZI52by0Suak89IquZPNSytlDvennJdW2tbJ5qZVMiebl1Z7fZc8Zop5aaVtnWxuWiVz6nlp2e8V\nmX0uPGpof02Sp88h885JNmaCz/+rZD50WFdJ3rae23kVuUvnpb/I8G/AxJmvT3Lkem7fVWVu85iT\nkzx+Tq/vV5Lcfmj//SSvn2Cbf+l78ZTvma23PXGPpbslOb+7v97dP0ny9iSHTxnY3R9P8t0pM5bJ\nvKS7Pzss/zDJeZl9WZ86t7v7X4a7Vx9uk5/Iq6oOTPK7Sf566qxFqqobZPaF43VJ0t0/6e5/nuMQ\nHpDka939zTlk7Z3kWlW1d2aFnm/NIfP2ST7V3T/q7iuSfCzJEVMErTAvHJ5Z4TDDz4dPndnd53X3\nl9czZw2ZHx5e3yT5ZJID55T7gyV3r5N1nptWmetfnuS/rHfeVWROaoXcpyd5cXf/eHjM5XPITJJU\nVSV5dGYfvKfO7CRb/1f+Bplgbloh9zZJPj4sn5HkkeucudLnhsnmpZUyp5yXVsmcdF5aJXeyeekq\nPgtOOS/N/TPoKpmTzUtXtZ0Tzksr5U42N62SOfW8tNL3ivsneffQvt7z0rKZ3f257r5gvXLWmHn6\nsK6TfDrrPy+tlPuD5Od/w9fK+s5Lc/+ueFWZw55290+yrnssrZI76eeIbb8XD7/Hyd4zW+2JhaWb\nJblwyf2LMoeCyyJV1cbMquyfmlPeXsNuv5cnOaO755H7/2b2Aelnc8jaqpN8uKrOrKpj55R5yyRb\nkpw07N7411V1nTllJ8lRWecPSMvp7ouTvDTJPyW5JMn3u/vDU+dmtrfSfarqRlV17cz+p+igOeRu\ntX93XzIsX5pk/zlmL8qTknxgXmFV9aKqujDJY5L88RzyDk9ycXd/fuqsbRw37MJ+Yq3zIZWruE1m\n759PVdXHquq35pSbJPdJcll3f3UOWc9O8ufD39FLkzxvDplJcm5+8R9hj8qEc9M2nxvmMi/N+7PK\nVWROOi9tmzuPeWlp5jznpWV7zl/KAAAIYklEQVRe48nnpm0y5zIvrfC3NPm8tE3uXOambTInn5e2\n/V6R2ZEn/7ykELzu3+UW8V1mtczhELjHJfngvHKr6qTM5vzbJXnlPDKTvGiYH15eVdecU2YyK7J8\nZJtC/5S5T0lyelVdlNnv9cXrHLvt9+IbZeL3TLJnFpb2KMMxsScnefYUb5bldPeV3X1IZlX1u1XV\nb0yZV1UPS3J5d585Zc4y7t3dd0lyaJJnVNV955C5d2aHRxzf3XdO8q+ZHZowueFY3MOSvGsOWftm\n9kHllklumuQ6VfXYqXO7+7zMDoH4cGb/eJ+V5Mqpc1cYy9b/0dhtVdXzk1yR5C3zyuzu53f3QUPm\ncVNmDcXJP8ocCljbOD7JrZMckllh9mVzyt07yQ0z2837Pyd55/C/ZPNwdOZQ9B48Pclzhr+j52TY\ng3QOnpTk96vqzMwORfnJFCGrfW6Yal5axGeVlTKnnpeWy516Xlqamdm2zWVeWmZbJ5+blsmcfF5a\n5e930nlpmdzJ56ZlMiefl7b9XpFZoWNS8/4us4bMVyf5eHf/w7xyu/uJmX0GPy/Jv59D5vMy+93+\nVmbv2f86h8ytJnuvrpD7nCQP7e4Dk5yU2eGG62KB34v3yMLSxfnlavqBQ9tuZ6hun5zkLd19yrzz\ne3aI1keTPGTiqHslOayqLsjs0Mb7V9WbJ87culfN1t2qT83sH7upXZTkoiVV9ndnVmiah0OTfLa7\nL5tD1u8k+UZ3b+nunyY5JclvzyE33f267r5rd983yfcyOw56Xi6rqgOSZPi5rocS7Uyq6glJHpbk\nMcOX1Xl7S9Z5l/1l3Dqz4ujnh/npwCSfraqbTBna3ZcNH2R+luS1mc/clMzmp1OGXb8/ndn/lK3r\nCU6XMxwue0SSd0ydNTgmszkpmRXa5/L6dveXuvtB3X3XzD4Af229M1b43DDpvLSIzyorZU49L61h\nW9d9Xlomcy7z0nLbOvXctMLrO+m8tMrf0qTz0gq5k85NK/xOJ5+XtlryveKeSfYZXuNkwu9yc/wu\ns2JmVb0gyYbMzpkzt9yh7crMvltN8nlpaWbPDrfsnh22elIm+rd1mdd3vyHrb6bIWyb30CS/ueS7\n3Duyvt9xfuV7cZJXZA7vmT2xsPSZJAfX7Mzo18js0J7TFjymdTf8b8zrkpzX3etWBV1D7oYarqRS\nVddK8sAkX5oys7uf190HdvfGzH6ff9fdk+7dUlXXqarrbV3O7KSfk1/1r7svTXJhVd12aHpAki9O\nnTuY5x4B/5TkHlV17eFv+QGZ/Y/J5KrqxsPPm2f2ofCt88gdnJbZB8MMP987x+y5qaqHZLaL7mHd\n/aM55h685O7hmX5u+kJ337i7Nw7z00WZnfz00ilztxYBBo/IHOamwXsyO1Fuquo2mV1c4NtzyP2d\nJF/q7ovmkJXMzoXwb4bl+yeZx+F3S+emqyX5PzM7+eZ69r/S54bJ5qVFfFZZKXPqeWmV3MnmpeUy\n5zEvrbKtk81Nq/wtTTYvXcXf72Tz0iq5k81Nq/xOp56XlvtecV5mX9CPHB623vPS3L/LrJRZVU9J\n8uAkRw8F2XnkfrmGq5QNv/fDsr7z0krbuvU/MCqzQ9PWc35Y7Xd6ZGYnuP7f65V3FbnnJbnBMB9l\nSdu6WOF78WMy4Xtmafged8vsvClfyayq/vw55L0ts11+f5rZP+BPnkPmvTPbXf3szA7nOSuzXe6m\nzr1Tks8Nuedkna+EsYb8+2UOV4XL7KqCnx9u587j72hJ9iFJNg+v8XuS7DuHzOsk+U6SG8xxO/8k\ns0n/nCRvynBFlznk/kNmxbrPJ3nAhDm/Mi9kdgz0RzL7MPi3SW44h8xHDMs/TnJZkg/NIfP8zM51\nt3VuWters62Se/Lw93R2kvdlduLcSTO3WX9B1v9KMstt55uSfGHYztOSHDCn1/caSd48vMafTXL/\neby+mV1J5mnrvY2rbOe9k5w5zBGfSnLXOeU+K7PPLl/J7HwMtc6Zy35umHJeWiVzsnlplcxJ56VV\nciebl1bK3OYxU8xLK23rZHPTKpmTzUurvb4Tz0srbetkc9MqmVPPS8t+r8jsc/inh/ftu7KOnxFX\nyfyPw7x0RWZFvL+eQ+YVmX1f3fqar/cVBn8lN7MdT/7H8F49J7M9Ka8/ZebQ/ndLMt+c4WpqU2YO\n6/4+sz2m1u11XcO2PmLY1s8P+beaKP9++cVV4SZ7z2y91RAEAAAAANtlTzwUDgAAAIB1oLAEAAAA\nwCgKSwAAAACMorAEAAAAwCgKSwAAAACMorAEALBOqurhVdVVdbtFjwUAYB4UlgAA1s/RST4x/AQA\n2O0pLAEArIOqum6Seyd5cpKjhrarVdWrq+pLVXVGVZ1eVUcO6+5aVR+rqjOr6kNVdcAChw8AMIrC\nEgDA+jg8yQe7+ytJvlNVd01yRJKNSe6Q5HFJ7pkkVXX1JK9McmR33zXJiUletIhBAwDsiL0XPQAA\ngN3E0UleMSy/fbi/d5J3dffPklxaVR8d1t82yW8kOaOqkmSvJJfMd7gAADtOYQkAYAdV1Q2T3D/J\n/1FVnVmhqJOcutJTkpzb3fec0xABACbhUDgAgB13ZJI3dfctuntjdx+U5BtJvpvkkcO5lvZPcr/h\n8V9OsqGqfn5oXFXdcREDBwDYEQpLAAA77uj86t5JJye5SZKLknwxyZuTfDbJ97v7J5kVo15SVZ9P\nclaS357fcAEA1kd196LHAACw26qq63b3v1TVjZJ8Osm9uvvSRY8LAGA9OMcSAMC03l9V+yS5RpI/\nVVQCAHYn9lgCAAAAYBTnWAIAAABgFIUlAAAAAEZRWAIAAABgFIUlAAAAAEZRWAIAAABgFIUlAAAA\nAEb5/wHK/OAYIJmIAgAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 1440x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "sMndEAEUbwAn",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "That's better. After that we normalize the data:"
      ]
    },
    {
      "metadata": {
        "id": "1cjLx1XhiKqZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 496
        },
        "outputId": "8ce23d55-d191-48eb-f120-f30577294d50"
      },
      "cell_type": "code",
      "source": [
        "\n",
        "combined_data['Age'] = combined_data['Age'].apply(lambda x: (x - combined_data['Age'].min()) / (combined_data['Age'].max() - combined_data['Age'].min()))\n",
        "combined_data.head()"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.275</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.475</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.425</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.425</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Age Cabin Embarked     Fare  \\\n",
              "0  0.275   NaN        S   7.2500   \n",
              "1  0.475   C85        C  71.2833   \n",
              "2  0.325   NaN        S   7.9250   \n",
              "3  0.425  C123        S  53.1000   \n",
              "4  0.425   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass  Sex  SibSp  Survived            Ticket Title  Master  Miss  Mr  \\\n",
              "0       3    0      1       0.0         A/5 21171    Mr       0     0   1   \n",
              "1       1    1      1       1.0          PC 17599   Mrs       0     0   0   \n",
              "2       3    1      0       1.0  STON/O2. 3101282  Miss       0     1   0   \n",
              "3       1    1      1       1.0            113803   Mrs       0     0   0   \n",
              "4       3    0      0       0.0            373450    Mr       0     0   1   \n",
              "\n",
              "   Mrs  Rare  \n",
              "0    0     0  \n",
              "1    1     0  \n",
              "2    0     0  \n",
              "3    1     0  \n",
              "4    0     0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "metadata": {
        "id": "qRSI8DpxRp59",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### SibSp and Parch\n",
        "Since the two features are similar, we will investigate on them at the same time. <br>\n",
        "Let's visualize the features:"
      ]
    },
    {
      "metadata": {
        "id": "3Z2WWWoZR1Rx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "688500cc-fc9d-4245-925d-7cf20772486a"
      },
      "cell_type": "code",
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        "ax0 = fig.add_subplot(121)\n",
        "sns.countplot(x = 'SibSp', hue = 'Survived', data = get_train_data(), ax = ax0)\n",
        "ax0.set_title('Siblings/spouses count')\n",
        "\n",
        "ax1 = fig.add_subplot(122)\n",
        "sns.countplot(x = 'Parch', hue = 'Survived', data = get_train_data(), ax = ax1)\n",
        "ax1.set_title('Parents/children count')\n",
        "plt.show()"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x360 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "jzGEcp-FS32c",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "They really look similar to each other. Let's create a syntheric feature as the sum of them:"
      ]
    },
    {
      "metadata": {
        "id": "CcIk3QfiS9yI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c1fba8e0-f90e-4bd2-dffc-dfdf85f5e40d"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Family'] = combined_data['SibSp'] + combined_data['Parch']\n",
        "sns.countplot(x = 'Family', hue = 'Survived', data = get_train_data())\n",
        "plt.title('Family count')"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Family count')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "ObgeavQUUAYO",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "The plot shows that people with a few family members are likely to survive. Let's split them into two groups."
      ]
    },
    {
      "metadata": {
        "id": "MIkDBA8SUWRp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "cad2e83f-59f6-4e62-92e8-a0be03f0c8ac"
      },
      "cell_type": "code",
      "source": [
        "family_group = []\n",
        "for value in combined_data['Family']:\n",
        "  if 1 <= value <= 3:\n",
        "    family_group.append('1')\n",
        "  else:\n",
        "    family_group.append('0')\n",
        "combined_data['Family-group'] = family_group\n",
        "sns.countplot(x = 'Family-group', hue = 'Survived', data = get_train_data())\n",
        "plt.title('Family group count')"
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Family group count')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "WJuwR3aXTvUr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8334fe71-231a-4e3b-c5bf-a4be3bac630a"
      },
      "cell_type": "code",
      "source": [
        "combined_data.head()"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family</th>\n",
              "      <th>Family-group</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.275</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.475</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.425</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.425</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Age Cabin Embarked     Fare  \\\n",
              "0  0.275   NaN        S   7.2500   \n",
              "1  0.475   C85        C  71.2833   \n",
              "2  0.325   NaN        S   7.9250   \n",
              "3  0.425  C123        S  53.1000   \n",
              "4  0.425   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass  Sex  SibSp  Survived            Ticket Title  Master  Miss  Mr  \\\n",
              "0       3    0      1       0.0         A/5 21171    Mr       0     0   1   \n",
              "1       1    1      1       1.0          PC 17599   Mrs       0     0   0   \n",
              "2       3    1      0       1.0  STON/O2. 3101282  Miss       0     1   0   \n",
              "3       1    1      1       1.0            113803   Mrs       0     0   0   \n",
              "4       3    0      0       0.0            373450    Mr       0     0   1   \n",
              "\n",
              "   Mrs  Rare  Family Family-group  \n",
              "0    0     0       1            1  \n",
              "1    1     0       1            1  \n",
              "2    0     0       0            0  \n",
              "3    1     0       1            1  \n",
              "4    0     0       0            0  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "metadata": {
        "id": "rl_LtgJLVjK7",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Ticket\n",
        "It looks like that tickets are all distinct. Here's a check:"
      ]
    },
    {
      "metadata": {
        "id": "n2kooX1NSZLu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "d608c3de-e96b-4928-d464-b60182c82125"
      },
      "cell_type": "code",
      "source": [
        "print('Number of unique values:', len(combined_data['Ticket'].unique()))\n",
        "print('Total: ', len(combined_data))"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Number of unique values: 929\n",
            "Total:  1309\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "DIG-OLZqWB3u",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Some people are sharing the same ticket. Let's see if the people who share their ticket with other people have the higher change to survive or not."
      ]
    },
    {
      "metadata": {
        "id": "gGy9PZGFWA82",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "781b439a-3025-4972-c3ed-9a4be7074218"
      },
      "cell_type": "code",
      "source": [
        "share_ticket = []\n",
        "for i, value in enumerate(combined_data['Ticket']):\n",
        "  found = False\n",
        "  for j in range(0, len(combined_data)):\n",
        "    if j != i and combined_data['Ticket'].values[j] == value:\n",
        "      found = True\n",
        "      break\n",
        "  share_ticket.append(int(found))\n",
        "\n",
        "combined_data['Share-ticket'] = share_ticket\n",
        "combined_data.head()"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>...</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family</th>\n",
              "      <th>Family-group</th>\n",
              "      <th>Share-ticket</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.275</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.475</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.425</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.425</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Age Cabin Embarked     Fare  \\\n",
              "0  0.275   NaN        S   7.2500   \n",
              "1  0.475   C85        C  71.2833   \n",
              "2  0.325   NaN        S   7.9250   \n",
              "3  0.425  C123        S  53.1000   \n",
              "4  0.425   NaN        S   8.0500   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass  Sex  SibSp     ...                 Ticket Title Master  Miss  Mr  \\\n",
              "0       3    0      1     ...              A/5 21171    Mr      0     0   1   \n",
              "1       1    1      1     ...               PC 17599   Mrs      0     0   0   \n",
              "2       3    1      0     ...       STON/O2. 3101282  Miss      0     1   0   \n",
              "3       1    1      1     ...                 113803   Mrs      0     0   0   \n",
              "4       3    0      0     ...                 373450    Mr      0     0   1   \n",
              "\n",
              "   Mrs  Rare  Family  Family-group Share-ticket  \n",
              "0    0     0       1             1            0  \n",
              "1    1     0       1             1            1  \n",
              "2    0     0       0             0            0  \n",
              "3    1     0       1             1            1  \n",
              "4    0     0       0             0            0  \n",
              "\n",
              "[5 rows x 21 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "metadata": {
        "id": "lMhzykL_YZ1q",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "a7bbaf97-3179-4091-f5a1-28a630a19706"
      },
      "cell_type": "code",
      "source": [
        "sns.countplot(x = 'Share-ticket', hue = 'Survived', data = get_train_data())\n",
        "plt.title('Share-ticket count')"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Share-ticket count')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYgAAAEWCAYAAAB8LwAVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAHT5JREFUeJzt3X+cVXW97/HXW0BQURCYDGfAIbEf\nGjjqqJTZIbpHkWNDddWBcwJMC38W9ahu5vGhaNeT12N5LT0aXRQs44daB+KiZaR1S4NmDFFAD/gr\nhjMqoBLYAQU/94/9HdiOi5kNzJ69Yd7Px2M/Zu3v+q61PjMP3G/Xd639XYoIzMzMWjug1AWYmVl5\nckCYmVkmB4SZmWVyQJiZWSYHhJmZZXJAmJlZJgeElS1J50v6fanryCfpAUmTCuj3gqT/1hk1mRWL\nA8JKStLHJD0qaaOkVyX9QdLJpa4LQNJUST/Jb4uIsyJiZmcesxw48Lqm7qUuwLouSYcBC4BLgLnA\ngcDpwNYiHKt7RGzr6P2a7c98BmGl9H6AiJgVEdsj4r8i4lcRsSy/k6SbJL0m6XlJZ+W1f17SSkmb\nJD0n6aK8dSMlNUn6pqSXgLtS+9mSlkp6PZ25DM8qTNJo4EqgXtJmSU+k9kckfSGv3xfzalgh6cSM\nfX0o1T4+vT9S0v2S1qX2L7d1zIz9DZL0s7T9Bkm3pvYDJF0l6UVJr0i6W1Kf/L9Hq/3sOCtIZy5z\n0zabJC2XVJvW/RgYDPwi1fU/suqy/Y8DwkrpP4DtkmZKOkvS4Rl9TgWeAQYANwLTJSmtewU4GzgM\n+Dxwc6sP6PcC/YCjgMmSTgDuBC4C+gM/BOZL6tn6oBHxIPAvwJyI6B0Rx7fuI+lcYCowMdVQB2xo\n1edE4JfAlyJilqQDgF8ATwCVwCeBr0g6s8BjdiN31vUiUJ32MTutPj+9PgG8D+gN3Np6H22oS/vq\nC8xv2TYiJgB/AT6V6rpxN/Zp+zAHhJVMRPwV+BgQwI+AdZLmSzoir9uLEfGjiNgOzAQGAkek7f9v\nRDwbOb8FfkVuiKrF28A1EbE1Iv4LmAz8MCIWpzOWmeSGs0bs4a/wBeDGiPhTqmF1RLyYt/50ch+0\nEyNiQWo7GaiIiOsi4s2IeC797uMKPOYpwJHANyLijYjYEhEtF/L/CfheRDwXEZuBbwHjJBU6lPz7\n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\nImorKjxfoJlZsXRqQETEyxGxPSLeBn7EzmGktcCgvK5Vqc3MzEqkUwNC0sC8t58BWu5wmg+Mk9RT\n0hDgGGBJZ9ZmZmbvVLTpMiTNAkYCAyQ1AdcAIyXVAEHuudYXAUTEcklzyX3PYhtwWURsL1ZtZmbW\nvqIFRESMz2ie3kb/6/H0HWZmZaMUdzGZmdk+wAFhZmaZHBBmZpbJAWFmZpkcEGZmlskBYWZmmfzY\nUNvhL9cNK3UJZWPw1U+WugSzkvMZhJmZZXJAmJlZJgeEmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZ\nZXJAmJlZJgeEmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZZXJAmJlZpqIFhKQ7Jb0i6am8tn6SHpK0\nKv08PLVL0vclrZa0TNKJxarLzMwKU8wziBnA6FZtVwCLIuIYYFF6D3AWcEx6TQZuL2JdZmZWgKIF\nRET8Dni1VfNYYGZangl8Oq/97sj5I9BX0sBi1WZmZu3r7GsQR0REc1p+CTgiLVcCa/L6NaW2d5E0\nWVKDpIZ169YVr1Izsy6uZBepIyKA2IPtpkVEbUTUVlRUFKEyMzODzg+Il1uGjtLPV1L7WmBQXr+q\n1GZmZiXS2QExH5iUlicB8/LaJ6a7mUYAG/OGoszMrAS6F2vHkmYBI4EBkpqAa4AbgLmSLgReBM5L\n3RcCY4DVwN+AzxerLjMzK0zRAiIixu9i1Scz+gZwWbFqMTOz3edvUpuZWSYHhJmZZXJAmJlZJgeE\nmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZZXJAmJlZJgeEmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZ\nZXJAmJlZJgeEmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZZepeioNKegHYBGwHtkVEraR+wBygGngB\nOC8iXitFfWZmVtoziE9ERE1E1Kb3VwCLIuIYYFF6b2ZmJVJOQ0xjgZlpeSbw6RLWYmbW5ZUqIAL4\nlaRGSZNT2xER0ZyWXwKOyNpQ0mRJDZIa1q1b1xm1mpl1SSW5BgF8LCLWSnoP8JCkp/NXRkRIiqwN\nI2IaMA2gtrY2s4+Zme29kpxBRMTa9PMV4OfAKcDLkgYCpJ+vlKI2MzPL6fSAkHSIpENbloEzgKeA\n+cCk1G0SMK+zazMzs51KMcR0BPBzSS3H/2lEPCjpT8BcSRcCLwLnlaA2MzNLOj0gIuI54PiM9g3A\nJzu7HjMzy1ZOt7mamVkZcUCYmVkmB4SZmWVyQJiZWSYHhJmZZXJAmJlZJgeEmZllckCYmVkmB4SZ\nmWVyQJiZWSYHhJmZZXJAmJlZJgeEmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZZXJAmJlZJgeEmZll\nckCYmVkmB4SZmWUqu4CQNFrSM5JWS7qi1PWYmXVVZRUQkroBtwFnAccC4yUdW9qqzMy6prIKCOAU\nYHVEPBcRbwKzgbElrsnMrEvqXuoCWqkE1uS9bwJOze8gaTIwOb3dLOmZTqptv3cUDADWl7qOsnCN\nSl2B5fG/zTwd82/zqEI6lVtAtCsipgHTSl3H/khSQ0TUlroOs9b8b7M0ym2IaS0wKO99VWozM7NO\nVm4B8SfgGElDJB0IjAPml7gmM7MuqayGmCJim6TLgV8C3YA7I2J5icvqSjx0Z+XK/zZLQBFR6hrM\nzKwMldsQk5mZlQkHhJmZZXJAmKc3sbIl6U5Jr0h6qtS1dEUOiC7O05tYmZsBjC51EV2VA8I8vYmV\nrYj4HfBqqevoqhwQljW9SWWJajGzMuKAMDOzTA4I8/QmZpbJAWGe3sTMMjkguriI2Aa0TG+yEpjr\n6U2sXEiaBTwGfEBSk6QLS11TV+KpNszMLJPPIMzMLJMDwszMMjkgzMwskwPCzMwyOSDMzCyTA8K6\nBEn/LGm5pGWSlko6VdILkgZ0wrFHSvpo3vuLJU1sp/+C3dh/jaQxe1unWWtl9chRs2KQ9BHgbODE\niNiaQuHAvdxn9/QdkkKMBDYDjwJExB17c+wMNUAtsLCD92tdnM8grCsYCKyPiK0AEbE+Iv4zrfuS\npMclPSnpgwCSTpH0mKQ/S3pU0gdS+/mS5kv6DbAotX1D0p/Smcm1rQ8sqRq4GPhqOnM5XdJUSV9P\n64dK+rWkJ1IdR7fa/uRUx9GSDknPR1iS2samb79fB9Sn/dcX4e9nXZQDwrqCXwGDJP2HpH+T9Hd5\n69ZHxInA7cDXU9vTwOkRcQJwNfAvef1PBM6JiL+TdAZwDLkp02uAkyR9PP/AEfECcAdwc0TURMT/\na1XbPcBtEXE88FGguWVFGpa6AxgbEc8C/wz8JiJOAT4B/CvQI9U4J+1/zp78gcyyeIjJ9nsRsVnS\nScDp5D5Y5+Q9Oe9n6Wcj8Nm03AeYKekYIMh9CLd4KCJank9wRnr9Ob3vTS4wfldIXZIOBSoj4uep\nzi2pHeBDwDTgjLyznTOAupazD6AXMLiQY5ntCQeEdQkRsR14BHhE0pPApLRqa/q5nZ3/PXwbeDgi\nPpOGiB7J29UbecsCvhMRP8w/lqTLgC+mt3t68biZXACcALQEhID/HhHPtDreqXt4DLM2eYjJ9nuS\nPpDOBlrUAC+2sUkfdk55fn4b/X4JXCCpdzpOpaT3RMRtabinJv3f/ybg0NYbR8QmoEnSp9P2PSUd\nnFa/DvwD8B1JI/OO9yWlUwxJJ6T2zP2b7S0HhHUFvckNGa2QtIzcs7enttH/RnIfzH+mjbPsiPgV\n8FPgsXRWch/ZH9S/AD7TcpG61boJwJdTXY8C783b/8vk7r66LZ0lfJvccNcyScvTe4CHgWN9kdo6\nmmdzNTOzTD6DMDOzTA4IMzPL5IAwM7NMDggzM8vkgDAzs0wOCDMzy+SAMDOzTP8fjQPnbE6ioKcA\nAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "du8iBn6BYm_h",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "So our guess is correct. People share ticket with someone else tend to have more change to survive."
      ]
    },
    {
      "metadata": {
        "id": "Knzw_Nv0bWis",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Fare\n",
        "There is one missing value, let's see if it's in the train or test data"
      ]
    },
    {
      "metadata": {
        "id": "wHgqg2Aqb3VN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "c50d48c8-4494-4915-d96c-037b38a469e1"
      },
      "cell_type": "code",
      "source": [
        "missing_values = train_data['Fare'].isnull()\n",
        "missing_values.value_counts()"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    891\n",
              "Name: Fare, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "metadata": {
        "id": "ebGrlR5ecHxl",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "So the missing value is in the test data. There's only one missing value so let's just replace it by the mean."
      ]
    },
    {
      "metadata": {
        "id": "DkpOOcB2cOjl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "ec761282-af0f-4618-8ea5-b7516ee0ca66"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Fare'].fillna(combined_data['Fare'].mean(), inplace = True)\n",
        "missing_values = combined_data['Fare'].isnull()\n",
        "missing_values.value_counts()"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    1309\n",
              "Name: Fare, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 34
        }
      ]
    },
    {
      "metadata": {
        "id": "XZBgyeUBdjFj",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Fare is a numeric feature so we simply normalize it."
      ]
    },
    {
      "metadata": {
        "id": "c8R7Z0wobWG9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "8e782717-ef86-4ec3-d88d-4409ec282749"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Fare'] = combined_data['Fare'].apply(lambda x: (x - combined_data['Fare'].min()) / (combined_data['Fare'].max() - combined_data['Fare'].min()))\n",
        "combined_data.head()"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>...</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Title</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family</th>\n",
              "      <th>Family-group</th>\n",
              "      <th>Share-ticket</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.275</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>0.014151</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.475</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "      <td>0.139136</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.325</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>0.015469</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>Miss</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.425</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "      <td>0.103644</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>113803</td>\n",
              "      <td>Mrs</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.425</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "      <td>0.015713</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>373450</td>\n",
              "      <td>Mr</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Age Cabin Embarked      Fare  \\\n",
              "0  0.275   NaN        S  0.014151   \n",
              "1  0.475   C85        C  0.139136   \n",
              "2  0.325   NaN        S  0.015469   \n",
              "3  0.425  C123        S  0.103644   \n",
              "4  0.425   NaN        S  0.015713   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass  Sex  SibSp     ...                 Ticket Title Master  Miss  Mr  \\\n",
              "0       3    0      1     ...              A/5 21171    Mr      0     0   1   \n",
              "1       1    1      1     ...               PC 17599   Mrs      0     0   0   \n",
              "2       3    1      0     ...       STON/O2. 3101282  Miss      0     1   0   \n",
              "3       1    1      1     ...                 113803   Mrs      0     0   0   \n",
              "4       3    0      0     ...                 373450    Mr      0     0   1   \n",
              "\n",
              "   Mrs  Rare  Family  Family-group Share-ticket  \n",
              "0    0     0       1             1            0  \n",
              "1    1     0       1             1            1  \n",
              "2    0     0       0             0            0  \n",
              "3    1     0       1             1            1  \n",
              "4    0     0       0             0            0  \n",
              "\n",
              "[5 rows x 21 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "metadata": {
        "id": "MK0bBilOeEnR",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Cabin\n",
        "There are a lot of missing values. First we will check if it's worh to use this feature."
      ]
    },
    {
      "metadata": {
        "id": "tK2vZi3kePOL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "outputId": "ee04a224-2d1b-4cd4-fc66-ca9e3bad60fe"
      },
      "cell_type": "code",
      "source": [
        "# Replaces the missing values by the letter 'M'\n",
        "combined_data['Cabin'].fillna('M', inplace = True)\n",
        "# Replaces the cabin by it's first letter.\n",
        "combined_data['Cabin'] = combined_data['Cabin'].apply(lambda x: x[0])\n",
        "sns.countplot(x = 'Cabin', hue = 'Survived', data = combined_data)"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f9eb65375f8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYgAAAEKCAYAAAAIO8L1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAF+lJREFUeJzt3X+UX3V95/Hn2yQQMBDIDyhmAhMb\nbRUTUhgUS3XTuBWaugN2A0Pahii4UX70RNu1UI8HkV13UWktItWTYzSJYhKEpcnmBHYRi90qoBkM\nPxK0iaJmcqIkAaJgI0l87x/fO3GS3GS+IXPnTmaej3PmfO/93B/znm++mdfcez/3cyMzkSRpf6+o\nuwBJ0sBkQEiSShkQkqRSBoQkqZQBIUkqZUBIkkoZEJKkUgaEJKlUpQERET+KiCciYm1ErCnaxkTE\n/RGxoXg9uWiPiPh0RGyMiMcj4uwqa5MkHVpUeSd1RPwIaMvMbT3aPgE8m5k3R8T1wMmZeV1EzAT+\nEpgJvAm4NTPfdKj9jxs3LltbWyurX5IGo87Ozm2ZOb639Yb3RzH7uQiYXkwvBh4Erival2QjsR6O\niJMi4rTM3HKwHbW2trJmzZqKy5WkwSUiftzMelVfg0jg/0ZEZ0TMK9pO7fFL/6fAqcX0BGBTj227\nijZJUg2qPoL4g8zcHBGnAPdHxPd6LszMjIjDOsdVBM08gNNPP73vKpUk7aPSI4jM3Fy8PgPcA7wR\n+FlEnAZQvD5TrL4ZmNhj85aibf99LsjMtsxsGz++11NokqSXqbIjiIh4JfCKzPxFMf124CZgJTAX\nuLl4XVFsshK4NiKW0bhIveNQ1x+kl2vXrl10dXWxc+fOuks5IiNHjqSlpYURI0bUXYoGqSpPMZ0K\n3BMR3d/nK5l5X0R8B7gzIq4EfgxcWqy/mkYPpo3AL4F3V1ibhrCuri5OOOEEWltbKT6fR53MZPv2\n7XR1dTFp0qS6y9EgVVlAZOYPgbNK2rcDbytpT+CaquqRuu3cufOoDgeAiGDs2LFs3bq17lI0iHkn\ntYakozkcug2Gn0EDmwEhSSplQEjAxz72Mc4880ymTp3KtGnTeOSRR454nytXruTmm2/ug+pg1KhR\nfbIf6XDUcSd1Zc754JKXvW3nJy/vw0p0NHnooYdYtWoVjz76KMceeyzbtm3jpZdeamrb3bt3M3x4\n+X+j9vZ22tvb+7JUqV95BKEhb8uWLYwbN45jjz0WgHHjxvGqV72K1tZWtm1rDCO2Zs0apk+fDsCN\nN97InDlzOP/885kzZw7nnXce69at27u/6dOns2bNGhYtWsS1117Ljh07OOOMM/j1r38NwIsvvsjE\niRPZtWsXP/jBD7jwwgs555xzeMtb3sL3vte4l/Tpp5/mzW9+M1OmTOHDH/5wP74b0m8YEBry3v72\nt7Np0yZe+9rXcvXVV/ONb3yj123Wr1/P1772NZYuXUpHRwd33nkn0AibLVu20NbWtnfd0aNHM23a\ntL37XbVqFRdccAEjRoxg3rx53HbbbXR2dnLLLbdw9dVXAzB//nyuuuoqnnjiCU477bQKfmqpdwaE\nhrxRo0bR2dnJggULGD9+PB0dHSxatOiQ27S3t3PccccBcOmll3LXXXcBcOeddzJr1qwD1u/o6GD5\n8uUALFu2jI6ODl544QW+9a1vcckllzBt2jTe+973smVL497Qb37zm8yePRuAOXPm9NWPKh2WQXUN\nQnq5hg0bxvTp05k+fTpTpkxh8eLFDB8+fO9pof3vun7lK1+5d3rChAmMHTuWxx9/nOXLl/O5z33u\ngP23t7fzoQ99iGeffZbOzk5mzJjBiy++yEknncTatWtLa7Ibq+rmEYSGvO9///ts2LBh7/zatWs5\n44wzaG1tpbOzE4C77777kPvo6OjgE5/4BDt27GDq1KkHLB81ahTnnnsu8+fP5x3veAfDhg3jxBNP\nZNKkSXz1q18FGndHP/bYYwCcf/75LFu2DIA77rijT35O6XAZEBryXnjhBebOncvrX/96pk6dyvr1\n67nxxhv5yEc+wvz582lra2PYsGGH3MesWbNYtmwZl1566UHX6ejo4Mtf/jIdHR172+644w4WLlzI\nWWedxZlnnsmKFY2hyW699VZuv/12pkyZwubNB4xZKfWLSp8oV7W2trbs+cAgu7mqGU899RSve93r\n6i6jTwymn0X9JyI6M7Ott/U8gpAklTIgJEmlDAhJUikDQpJUyoCQJJUyICRJpbyTWkPekXSPLtNM\nl+n77ruP+fPns2fPHt7znvdw/fXX77P8V7/6FZdffjmdnZ2MHTuW5cuX09ra2qd1Sr3xCELqZ3v2\n7OGaa67h3nvvZf369SxdupT169fvs87ChQs5+eST2bhxIx/4wAe47rrraqpWQ5kBIfWzb3/720ye\n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\nL4kAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "e0QNJAA0e-EJ",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Looks like it gives us nothing but noises. Let's just ignore it."
      ]
    },
    {
      "metadata": {
        "id": "NanxQOkJfGPG",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### Embarked\n",
        "First let's replace the missing values by the most frequent value."
      ]
    },
    {
      "metadata": {
        "id": "lpSDp0RVfS1e",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "4cfa7831-f05b-4187-c92c-8829928bf829"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Embarked'].value_counts()"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "S    914\n",
              "C    270\n",
              "Q    123\n",
              "Name: Embarked, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "metadata": {
        "id": "eli5Z2CPfYM5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "1a25d366-e554-4274-9ecf-11f3adba8eff"
      },
      "cell_type": "code",
      "source": [
        "combined_data['Embarked'].fillna('S', inplace = True)\n",
        "missing_values = combined_data['Embarked'].isnull()\n",
        "missing_values.value_counts()"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False    1309\n",
              "Name: Embarked, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "metadata": {
        "id": "1_siNrwUf7_M",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Now see if Embarked is a good feature:"
      ]
    },
    {
      "metadata": {
        "id": "wEhcGXsdf5vp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "932da89d-3801-46a2-f18b-fb7114d403c6"
      },
      "cell_type": "code",
      "source": [
        "sns.countplot(x = 'Embarked', hue = 'Survived', data = get_train_data())\n",
        "plt.title('Embarked count')"
      ],
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Embarked count')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYgAAAEWCAYAAAB8LwAVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAAHkRJREFUeJzt3Xuc1XW97/HXW0DQUBCYFBl0SLCC\nDU46GmbtCNuJbBusg4ycAkw75K0H3bP0KFo+KnfmNnXroUOCaVzEFCK0lLROXpsxREENvMWwJwVU\nvAVy+Zw/1ndoOf6YWQOzZs3A+/l4rMf8ft/f9/tbn8V6MO/53RURmJmZNbVPqQswM7OOyQFhZmaZ\nHBBmZpbJAWFmZpkcEGZmlskBYWZmmRwQtseTNEvS99twfdMl3dxG63pe0ifbYl1mbc0BYR1S+sX5\nD0lv5L2uLXVde7q2DlPr3LqWugCzZnw6Iu4pdRH5JPn/jO01vAVhnY6kMyTdL+kqSa9KelbSR1L7\nGkkvSZrSZFg/SXdLel3SHyQdnre+q9O41yTVSfpY3rLpkhZIulnSa8AZTWrpJmmOpNsk7StpH0kX\nSHpG0gZJ8yX1yes/SdILadmFLXzO/SRdmfpvlPQnSfulZdWSVqTPf5+kD+aNC0mD8+Z3bBVIGiWp\nXtLX079Tg6QvpGVTgc8B30pbbL8u+EuxPZIDwjqrDwPLgb7AL4G5wLHAYODzwLWSeub1/xzwPaAf\nsAy4JW/Zn4FKoE9a162SeuQtHwcsAHrnj0u/rO8ANgMTIuJt4MvAqcDHgUOBV4DrUv+hwPXApLSs\nL1DezGf8MXAM8JFU27eA7ZKOBOYAXwHKgCXAryXt28y68h0C9AIGAGcB10k6KCJmpM93RUT0jIhP\nF7g+20M5IKwjuyP9hdz4+l95y56LiBsjYhswDxgIXBYRmyPid8Db5MKi0W8i4o8RsRm4EDhe0kCA\niLg5IjZExNaIuBLoDrw/b+yDEXFHRGyPiH+ktgOBu4BngC+kOgDOBi6MiPr0XtOB8WnX1HhgcV4d\n/xvYnvXBJe0DnAlMi4i1EbEtIh5I42rS57k7IraQC5L9yAVJIbakf6stEbEEeKPJ5zUDfAzCOrZT\nmzkG8WLe9D8AIqJpW/4WxJrGiYh4Q9LL5P6KXyPpG+T+kj4UCHK//Ptljc0zEugGTIx33vHycOB2\nSfm/+LcBBze+X14db0rasJPP1w/oQS6AmjoUeCFvPdslrSG3RVCIDRGxNW/+Ld75b2UGeAvC9h4D\nGyfSrqc+wH+n4w3fAiYAB0VEb2AjoLyxWbc8/h3wA2CppIPz2tcAJ0dE77xXj4hYCzQ0qWN/cruZ\nsqwHNgFHZCz7b3JB1LgepfWuTU1vAfvn9T9kJ++Rxbd3th0cELa3GCvpo2k//feAhyJiDXAAsBVY\nB3SVdDG5LYgWRcQV5I5ZLJXUuMVxA3B540FwSWWSxqVlC4BT8uq4jJ38H4yI7cDPgZ9IOlRSF0nH\nS+oOzAf+XdKJkroBXyd3HOSBNHwZ8D/TmDHkjocU6kXgfa3ob3swB4R1ZL9uch3E7buxrl8ClwAv\nkzvw+/nU/ltyxxL+Sm63zSaydylliojvkTtQfU86W+lqYBHwO0mvAw+RO6BORKwAzku1NJA7gF3f\nzOq/ATxO7iD6y8CPgH0i4ulU/zXktjQ+Te6U4LfTuGmp7VVyB+fvKPTzADOBoemYT2vG2R5IfmCQ\nmZll8RaEmZllckCYmVkmB4SZmWVyQJiZWaZOfaFcv379oqKiotRlmJl1KnV1desjoqylfp06ICoq\nKqitrS11GWZmnYqkF1ru5V1MZma2Ew4IMzPL5IAwM7NMnfoYhJlZW9uyZQv19fVs2rSp1KXsth49\nelBeXk63bt12abwDwswsT319PQcccAAVFRXkbpTbOUUEGzZsoL6+nkGDBu3SOryLycwsz6ZNm+jb\nt2+nDgcASfTt23e3toQcEGZmTXT2cGi0u5/DAWFmZpkcEGZmBbj88ssZNmwYI0aMoLKykocffni3\n17lo0SJ++MMftkF10LNn2z81dq85SH3MN28qdQmtVvcfk0tdgpkBDz74IIsXL+bRRx+le/furF+/\nnrfffrvlgcDWrVvp2jX7V211dTXV1dVtWWqb8haEmVkLGhoa6NevH927dwegX79+HHrooVRUVLB+\n/XoAamtrGTVqFADTp09n0qRJnHDCCUyaNImRI0eyYsWKHesbNWoUtbW1zJo1i/PPP5+NGzdy+OGH\ns337dgDefPNNBg4cyJYtW3jmmWcYM2YMxxxzDB/72Md46qmnAHjuuec4/vjjGT58OBdddFFRPrcD\nwsysBZ/61KdYs2YNRx55JOeeey5/+MMfWhyzcuVK7rnnHubMmUNNTQ3z588HcmHT0NBAVVXVjr69\nevWisrJyx3oXL17MSSedRLdu3Zg6dSrXXHMNdXV1/PjHP+bcc88FYNq0aZxzzjk8/vjj9O/fvwif\n2gFhZtainj17UldXx4wZMygrK6OmpoZZs2Y1O6a6upr99tsPgAkTJrBgwQIA5s+fz/jx49/Vv6am\nhnnz5gEwd+5campqeOONN3jggQc47bTTqKys5Etf+hINDQ0A3H///UycOBGASZMmtdVHfYe95hiE\nmdnu6NKlC6NGjWLUqFEMHz6c2bNn07Vr1x27hZpeb/Ce97xnx/SAAQPo27cvy5cvZ968edxwww3v\nWn91dTXf/e53efnll6mrq2P06NG8+eab9O7dm2XLlmXWVOzTcb0FYWbWgqeffppVq1btmF+2bBmH\nH344FRUV1NXVAXDbbbc1u46amhquuOIKNm7cyIgRI961vGfPnhx77LFMmzaNU045hS5dunDggQcy\naNAgbr31ViB3dfRjjz0GwAknnMDcuXMBuOWWW9rkczblgDAza8Ebb7zBlClTGDp0KCNGjGDlypVM\nnz6dSy65hGnTplFVVUWXLl2aXcf48eOZO3cuEyZM2Gmfmpoabr75Zmpqana03XLLLcycOZOjjjqK\nYcOGsXDhQgCuvvpqrrvuOoYPH87atWvb5oM2oYgoyorbQ1VVVRT6wCCf5mpmhXjyySf54Ac/WOoy\n2kzW55FUFxFVOxmyg7cgzMwskwPCzMwyFT0gJHWR9BdJi9P8IEkPS1otaZ6kfVN79zS/Oi2vKHZt\nZma2c+2xBTENeDJv/kfAVRExGHgFOCu1nwW8ktqvSv3MzKxEihoQksqBfwf+b5oXMBpYkLrMBk5N\n0+PSPGn5idpT7rlrZtYJFXsL4j+BbwHb03xf4NWI2Jrm64EBaXoAsAYgLd+Y+r+DpKmSaiXVrlu3\nrpi1m5nt1Yp2JbWkU4CXIqJO0qi2Wm9EzABmQO4017Zar5lZlrY+Rb7Q09fvuusupk2bxrZt2/ji\nF7/IBRdc8I7lmzdvZvLkydTV1dG3b1/mzZtHRUVFm9ZazC2IE4BqSc8Dc8ntWroa6C2pMZjKgcYr\nPNYCAwHS8l7AhiLWZ2bWIW3bto3zzjuPO++8k5UrVzJnzhxWrlz5jj4zZ87koIMOYvXq1Xz1q1/l\n29/+dpvXUbSAiIjvRER5RFQApwO/j4jPAfcCjXeqmgIsTNOL0jxp+e+jM1/FZ2a2ix555BEGDx7M\n+973Pvbdd19OP/30HVdQN1q4cCFTpuR+ZY4fP56lS5fS1r8yS3EdxLeBr0laTe4Yw8zUPhPom9q/\nBlywk/FmZnu0tWvXMnDgwB3z5eXl77qdRn6frl270qtXLzZsaNudLu1yN9eIuA+4L00/CxyX0WcT\ncFp71GNmZi3zldRmZh3MgAEDWLNmzY75+vp6BgwYsNM+W7duZePGjfTt+64TP3eLA8LMrIM59thj\nWbVqFc899xxvv/02c+fOfdezq6urq5k9O3fp2IIFCxg9enSbPx/CDwwyM2tGKe6q3LVrV6699lpO\nOukktm3bxplnnsmwYcO4+OKLqaqqorq6mrPOOotJkyYxePBg+vTps+PZEG1aR5uv0czMdtvYsWMZ\nO3bsO9ouu+yyHdM9evTY8SChYvEuJjMzy+SAMDOzTA4IMzPL5IAwM7NMDggzM8vkgDAzs0w+zdXM\nrBl/u2x4m67vsIsfb7HPmWeeyeLFi3nve9/LE0888a7lEcG0adNYsmQJ+++/P7NmzeLoo49u0zrB\nWxBmZh3OGWecwV133bXT5XfeeSerVq1i1apVzJgxg3POOacodTggzMw6mH/913+lT58+O12+cOFC\nJk+ejCRGjhzJq6++SkNDQ5vX4YAwM+tkCrkdeFtwQJiZWaaiBYSkHpIekfSYpBWSLk3tsyQ9J2lZ\nelWmdkn6qaTVkpZLavsjLmZme4BCbgfeFoq5BbEZGB0RRwGVwBhJI9Oyb0ZEZXotS20nA0PSaypw\nfRFrMzPrtKqrq7npppuICB566CF69epF//792/x9inaaa3qe9Btptlt6NffA1HHATWncQ5J6S+of\nEW1/5MXMrECFnJba1iZOnMh9993H+vXrKS8v59JLL2XLli0AnH322YwdO5YlS5YwePBg9t9/f268\n8cai1FHU6yAkdQHqgMHAdRHxsKRzgMslXQwsBS6IiM3AAGBN3vD61NbQZJ1TyW1hcNhhhxWzfDOz\nkpgzZ06zyyVx3XXXFb2Ooh6kjohtEVEJlAPHSfoX4DvAB4BjgT7At1u5zhkRURURVWVlZW1es5mZ\n5bTLWUwR8SpwLzAmIhoiZzNwI3Bc6rYWGJg3rDy1mZlZCRTzLKYySb3T9H7AvwFPSeqf2gScCjRe\nR74ImJzOZhoJbPTxBzMrhdyh0M5vdz9HMY9B9Admp+MQ+wDzI2KxpN9LKgMELAPOTv2XAGOB1cBb\nwBeKWJuZWaYePXqwYcMG+vbtS+7v2M4pItiwYQM9evTY5XUU8yym5cCHMtpH76R/AOcVqx4zs0KU\nl5dTX1/PunXrSl3KbuvRowfl5eW7PN53czUzy9OtWzcGDRpU6jI6BN9qw8zMMjkgzMwskwPCzMwy\nOSDMzCyTA8LMzDI5IMzMLJMDwszMMjkgzMwskwPCzMwyOSDMzCyTA8LMzDI5IMzMLJMDwszMMjkg\nzMwsUzGfKNdD0iOSHpO0QtKlqX2QpIclrZY0T9K+qb17ml+dllcUqzYzM2tZMbcgNgOjI+IooBIY\nkx4l+iPgqogYDLwCnJX6nwW8ktqvSv3MzKxEihYQkfNGmu2WXgGMBhak9tnknksNMC7Nk5afqM78\nvD8zs06uqMcgJHWRtAx4CbgbeAZ4NSK2pi71wIA0PQBYA5CWbwT6ZqxzqqRaSbV7wiMBzcw6qqIG\nRERsi4hKoBw4DvhAG6xzRkRURURVWVnZbtdoZmbZ2uUspoh4FbgXOB7oLanxWdjlwNo0vRYYCJCW\n9wI2tEd9Zmb2bsU8i6lMUu80vR/wb8CT5IJifOo2BViYpheledLy30dEFKs+MzNrXteWu+yy/sBs\nSV3IBdH8iFgsaSUwV9L3gb8AM1P/mcAvJK0GXgZOL2JtZmbWgqIFREQsBz6U0f4sueMRTds3AacV\nqx4zM2sdX0ltZmaZHBBmZpbJAWFmZpkcEGZmlskBYWZmmRwQZmaWyQFhZmaZHBBmZpbJAWFmZpkc\nEGZmlskBYWZmmRwQZmaWyQFhZmaZHBBmZpbJAWFmZpmK+US5gZLulbRS0gpJ01L7dElrJS1Lr7F5\nY74jabWkpyWdVKzazMysZcV8otxW4OsR8aikA4A6SXenZVdFxI/zO0saSu4pcsOAQ4F7JB0ZEduK\nWKOZme1E0bYgIqIhIh5N06+Tex71gGaGjAPmRsTmiHgOWE3Gk+fMzKx9tMsxCEkV5B4/+nBqOl/S\nckk/l3RQahsArMkbVk/zgWJmZkVU9ICQ1BO4DfhKRLwGXA8cAVQCDcCVrVzfVEm1kmrXrVvX5vWa\nmVlOQQEhaWkhbRl9upELh1si4lcAEfFiRGyLiO3Az/jnbqS1wMC84eWp7R0iYkZEVEVEVVlZWSHl\nm5nZLmg2ICT1kNQH6CfpIEl90quCFnb/SBIwE3gyIn6S194/r9tngCfS9CLgdEndJQ0ChgCPtPYD\nmZlZ22jpLKYvAV8hd1ZRHaDU/hpwbQtjTwAmAY9LWpbavgtMlFQJBPB8eg8iYoWk+cBKcmdAnecz\nmMzMSqfZgIiIq4GrJX05Iq5pzYoj4k/8M1DyLWlmzOXA5a15HzMzK46CroOIiGskfQSoyB8TETcV\nqS4zMyuxggJC0i/InXm0DGjc7ROAA8LMbA9V6JXUVcDQiIhiFmNmZh1HoddBPAEcUsxCzMysYyl0\nC6IfsFLSI8DmxsaIqC5KVWZmVnKFBsT0YhZhZmYdT6FnMf2h2IWYmVnHUuhZTK+TO2sJYF+gG/Bm\nRBxYrMLMzKy0Ct2COKBxOt1CYxwwslhFmZlZ6bX6bq6RcwfgJ76Zme3BCt3F9Nm82X3IXRexqSgV\n2Q5/u2x4qUtotcMufrzUJZhZGyn0LKZP501vJXeTvXFtXo2ZmXUYhR6D+EKxCzEzs46l0AcGlUu6\nXdJL6XWbpPJiF2dmZqVT6EHqG8k90OfQ9Pp1ajMzsz1UoQFRFhE3RsTW9JoF+HmfZmZ7sEIDYoOk\nz0vqkl6fBzY0N0DSQEn3SlopaYWkaam9j6S7Ja1KPw9K7ZL0U0mrJS2XdPTufTQzM9sdhQbEmcAE\n4O9AAzAeOKOFMVuBr0fEUHIX1Z0naShwAbA0IoYAS9M8wMnknkM9BJgKXF/4xzAzs7ZWaEBcBkyJ\niLKIeC+5wLi0uQER0RARj6bp14EngQHkTo+dnbrNBk5N0+OAm9KFeA8BvSX1b9WnMTOzNlNoQIyI\niFcaZyLiZeBDhb6JpIrU/2Hg4IhoSIv+DhycpgcAa/KG1ae2puuaKqlWUu26desKLcHMzFqp0IDY\np/FYAeSOI1D4Vdg9gduAr0TEa/nL0hPqWvWUuoiYERFVEVFVVubj5GZmxVLoldRXAg9KujXNnwZc\n3tIgSd3IhcMtEfGr1PyipP4R0ZB2Ib2U2tcCA/OGl6c2MzMrgYK2ICLiJuCzwIvp9dmI+EVzY9Jd\nX2cCT0bET/IWLQKmpOkpwMK89snpbKaRwMa8XVFmZtbOCt2CICJWAitbse4TgEnA45KWpbbvAj8E\n5ks6C3iB3NlRAEuAscBq4C3At/cwMyuhggOitSLiT4B2svjEjP4BnFeseszMrHVa/TwIMzPbOzgg\nzMwskwPCzMwyOSDMzCyTA8LMzDI5IMzMLJMDwszMMjkgzMwskwPCzMwyOSDMzCyTA8LMzDI5IMzM\nLJMDwszMMjkgzMwskwPCzMwyFS0gJP1c0kuSnshrmy5praRl6TU2b9l3JK2W9LSkk4pVl5mZFaaY\nWxCzgDEZ7VdFRGV6LQGQNBQ4HRiWxvyXpC5FrM3MzFpQtICIiD8CLxfYfRwwNyI2R8Rz5B47elyx\najMzs5aV4hjE+ZKWp11QB6W2AcCavD71qe1dJE2VVCupdt26dcWu1cxsr9XeAXE9cARQCTQAV7Z2\nBRExIyKqIqKqrKysreszM7OkXQMiIl6MiG0RsR34Gf/cjbQWGJjXtTy1mZlZibRrQEjqnzf7GaDx\nDKdFwOmSuksaBAwBHmnP2szM7J26FmvFkuYAo4B+kuqBS4BRkiqBAJ4HvgQQESskzQdWAluB8yJi\nW7FqMzOzlhUtICJiYkbzzGb6Xw5cXqx6zMysdXwltZmZZXJAmJlZJgeEmZllckCYmVkmB4SZmWVy\nQJiZWSYHhJmZZXJAmJlZJgeEmZllckCYmVkmB4SZmWVyQJiZWSYHhJmZZXJAmJlZJgeEmZllKlpA\nSPq5pJckPZHX1kfS3ZJWpZ8HpXZJ+qmk1ZKWSzq6WHWZmVlhirkFMQsY06TtAmBpRAwBlqZ5gJPJ\nPWZ0CDAVuL6IdZmZWQGKFhAR8Ufg5SbN44DZaXo2cGpe+02R8xDQu8nzq83MrJ219zGIgyOiIU3/\nHTg4TQ8A1uT1q09t7yJpqqRaSbXr1q0rXqVmZnu5kh2kjogAYhfGzYiIqoioKisrK0JlZmYG7R8Q\nLzbuOko/X0rta4GBef3KU5uZmZVIewfEImBKmp4CLMxrn5zOZhoJbMzbFWVmZiXQtVgrljQHGAX0\nk1QPXAL8EJgv6SzgBWBC6r4EGAusBt4CvlCsuszay98uG17qElrlsIsfL3UJ1sEULSAiYuJOFp2Y\n0TeA84pVi5mZtZ6vpDYzs0wOCDMzy+SAMDOzTA4IMzPL5IAwM7NMDggzM8tUtNNczdrSMd+8qdQl\ntNrtB5S6ArPd4y0IMzPL5IAwM7NMDggzM8vkgDAzs0wOCDMzy+SAMDOzTA4IMzPL5IAwM7NMJblQ\nTtLzwOvANmBrRFRJ6gPMAyqA54EJEfFKKeozM7PSbkF8IiIqI6IqzV8ALI2IIcDSNG9mZiXSkXYx\njQNmp+nZwKklrMXMbK9XqoAI4HeS6iRNTW0HR0RDmv47cHBpSjMzMyjdzfo+GhFrJb0XuFvSU/kL\nIyIkRdbAFChTAQ477LDiV2pmtpcqSUBExNr08yVJtwPHAS9K6h8RDZL6Ay/tZOwMYAZAVVVVZoiY\nWcfS2e7GW/cfk0tdQofQ7ruYJL1H0gGN08CngCeARcCU1G0KsLC9azMzs38qxRbEwcDtkhrf/5cR\ncZekPwPzJZ0FvABMKEFtZmaWtHtARMSzwFEZ7RuAE9u7HjMzy9aRTnM1M7MOxAFhZmaZHBBmZpbJ\nAWFmZplKdaGcmVmH9bfLhpe6hFY77OLH23yd3oIwM7NMDggzM8vkgDAzs0wOCDMzy+SAMDOzTA4I\nMzPL5IAwM7NMDggzM8vkgDAzs0wOCDMzy+SAMDOzTB0uICSNkfS0pNWSLih1PWZme6sOFRCSugDX\nAScDQ4GJkoaWtiozs71ThwoI4DhgdUQ8GxFvA3OBcSWuycxsr6SIKHUNO0gaD4yJiC+m+UnAhyPi\n/Lw+U4Gpafb9wNPtXmj76QesL3URtsv8/XVee/p3d3hElLXUqdM9DyIiZgAzSl1He5BUGxFVpa7D\ndo2/v87L311OR9vFtBYYmDdfntrMzKyddbSA+DMwRNIgSfsCpwOLSlyTmdleqUPtYoqIrZLOB34L\ndAF+HhErSlxWKe0Vu9L2YP7+Oi9/d3Swg9RmZtZxdLRdTGZm1kE4IMzMLJMDogOSdKGkFZKWS1om\n6cOlrskKJ+kQSXMlPSOpTtISSUeWui5rmaRySQslrZL0rKRrJXUvdV2l4oDoYCQdD5wCHB0RI4BP\nAmtKW5UVSpKA24H7IuKIiDgG+A5wcGkrs5ak7+5XwB0RMQQYAuwHXFHSwkqoQ53FZAD0B9ZHxGaA\niNiTr+bcE30C2BIRNzQ2RMRjJazHCjca2BQRNwJExDZJXwVekHRhRLxR2vLan7cgOp7fAQMl/VXS\nf0n6eKkLslb5F6Cu1EXYLhlGk+8uIl4DngcGl6KgUnNAdDDpr5RjyN1vah0wT9IZJS3KzPZKDogO\nKCK2RcR9EXEJcD7wP0pdkxVsBbmAt85nJU2+O0kHAoewZ98UdKccEB2MpPdLGpLXVAm8UKp6rNV+\nD3RPdx0GQNIISR8rYU1WmKXA/pImw47n01wJXBsR/yhpZSXigOh4egKzJa2UtJzcg5Oml7YkK1Tk\nbk3wGeCT6TTXFcAPgL+XtjJrSd53N17SKmADsD0iLi9tZaXjW22YmWWQ9BFgDvCZiHi01PWUggPC\nzMwyeReTmZllckCYmVkmB4SZmWVyQJiZWSYHhO2VJG1Ld8ptfF3QirGjJC3ezfe/T1LVLo7d7fc3\nK4Rv1md7q39ERGUp3jhdgGXW4XkLwiyPpOcl/SBtVdRKOlrSb9NFb2fndT1Q0m8kPS3pBkn7pPHX\np3ErJF3aZL0/kvQocFpe+z6SZkn6fpr/lKQHJT0q6VZJPVP7GElPpfGfbZd/DNvrOSBsb7Vfk11M\nNXnL/pa2Lv4fMAsYD4wELs3rcxzwZXJXuh/BP39pXxgRVcAI4OOSRuSN2RARR0fE3DTfFbgFWBUR\nF0nqB1wEfDIijgZqga9J6gH8DPg0uXsFHdJG/wZmzfIuJttbNbeLaVH6+TjQMyJeB16XtFlS77Ts\nkYh4FkDSHOCjwAJgQroPU1dyz/YYCixPY+Y1eZ//A8zPu5XDyNT//tyza9gXeBD4APBcRKxK73cz\nubv9mhWVA8Ls3Tann9vzphvnG//PNL0FQUgaBHwDODYiXpE0C+iR1+fNJmMeAD4h6cqI2AQIuDsi\nJuZ3klSSYyVm3sVktmuOkzQoHXuoAf4EHEguBDZKOhg4uYV1zASWAPMldQUeAk6QNBhA0nvSs6yf\nAiokHZHGTcxcm1kb8xaE7a32k7Qsb/6uiCj4VFfgz8C15J40di9we0Rsl/QXcr/Q1wD3t7SSiPiJ\npF7AL4DPAWcAcyR1T10uioi/pt1Wv5H0FrljIwe0olazXeKb9ZmZWSbvYjIzs0wOCDMzy+SAMDOz\nTA4IMzPL5IAwM7NMDggzM8vkgDAzs0z/H79M8Irh24+hAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "EvOX3wEtgdJX",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "Looks like the survival change in the group 'S' of embarkation is quite low, unlike the other two. So let's keep the feature.  \n",
        "Now we one hot encode them:"
      ]
    },
    {
      "metadata": {
        "id": "q9drjRMngqAe",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "outputId": "762472c7-ed6a-4074-c4c2-5e053dcc04dc"
      },
      "cell_type": "code",
      "source": [
        "dummies = pd.get_dummies(combined_data['Embarked'])\n",
        "dummies.columns = ['Embarked-C', 'Embarked-Q', 'Embarked-S']\n",
        "combined_data = pd.concat([combined_data, dummies], axis = 1)\n",
        "combined_data.head()"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>...</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family</th>\n",
              "      <th>Family-group</th>\n",
              "      <th>Share-ticket</th>\n",
              "      <th>Embarked-C</th>\n",
              "      <th>Embarked-Q</th>\n",
              "      <th>Embarked-S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.275</td>\n",
              "      <td>M</td>\n",
              "      <td>S</td>\n",
              "      <td>0.014151</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.475</td>\n",
              "      <td>C</td>\n",
              "      <td>C</td>\n",
              "      <td>0.139136</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.325</td>\n",
              "      <td>M</td>\n",
              "      <td>S</td>\n",
              "      <td>0.015469</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.425</td>\n",
              "      <td>C</td>\n",
              "      <td>S</td>\n",
              "      <td>0.103644</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.425</td>\n",
              "      <td>M</td>\n",
              "      <td>S</td>\n",
              "      <td>0.015713</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Age Cabin Embarked      Fare  \\\n",
              "0  0.275     M        S  0.014151   \n",
              "1  0.475     C        C  0.139136   \n",
              "2  0.325     M        S  0.015469   \n",
              "3  0.425     C        S  0.103644   \n",
              "4  0.425     M        S  0.015713   \n",
              "\n",
              "                                                Name  Parch  PassengerId  \\\n",
              "0                            Braund, Mr. Owen Harris      0            1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...      0            2   \n",
              "2                             Heikkinen, Miss. Laina      0            3   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)      0            4   \n",
              "4                           Allen, Mr. William Henry      0            5   \n",
              "\n",
              "   Pclass  Sex  SibSp    ...      Miss Mr Mrs  Rare  Family  Family-group  \\\n",
              "0       3    0      1    ...         0  1   0     0       1             1   \n",
              "1       1    1      1    ...         0  0   1     0       1             1   \n",
              "2       3    1      0    ...         1  0   0     0       0             0   \n",
              "3       1    1      1    ...         0  0   1     0       1             1   \n",
              "4       3    0      0    ...         0  1   0     0       0             0   \n",
              "\n",
              "   Share-ticket  Embarked-C  Embarked-Q Embarked-S  \n",
              "0             0           0           0          1  \n",
              "1             1           1           0          0  \n",
              "2             0           0           0          1  \n",
              "3             1           0           0          1  \n",
              "4             0           0           0          1  \n",
              "\n",
              "[5 rows x 24 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "metadata": {
        "id": "9BsyTRJzhVdb",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Build models\n",
        "The features has been preprocessed so far. Now is the time to build our first model.\n"
      ]
    },
    {
      "metadata": {
        "id": "Ef1iAem8h5lI",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Create a list of features:"
      ]
    },
    {
      "metadata": {
        "id": "F5d0ri6lhzWi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "79b9a2eb-c4e8-46c2-b8f0-d5e82a7fb22e"
      },
      "cell_type": "code",
      "source": [
        "combined_data.columns.values"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Age', 'Cabin', 'Embarked', 'Fare', 'Name', 'Parch', 'PassengerId',\n",
              "       'Pclass', 'Sex', 'SibSp', 'Survived', 'Ticket', 'Title', 'Master',\n",
              "       'Miss', 'Mr', 'Mrs', 'Rare', 'Family', 'Family-group',\n",
              "       'Share-ticket', 'Embarked-C', 'Embarked-Q', 'Embarked-S'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 41
        }
      ]
    },
    {
      "metadata": {
        "id": "eNorfZ80h9mB",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Make a list of features:\n",
        "features = [#'Age', \n",
        "            'Fare', \n",
        "            'Pclass', \n",
        "            'Sex', \n",
        "            'Master', \n",
        "            'Miss', \n",
        "            'Mr', \n",
        "            'Mrs', \n",
        "            'Rare', \n",
        "            'Family-group', \n",
        "            'Share-ticket',\n",
        "            'Embarked-C', \n",
        "            'Embarked-Q', \n",
        "            'Embarked-S'\n",
        "           ]\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "3xx93J33jtsG",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Splits the train data into train set and validation set."
      ]
    },
    {
      "metadata": {
        "id": "iIWV5ozsjr33",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "X_train, X_validate, y_train, y_validate = train_test_split(get_train_data()[features], get_train_data()['Survived'], test_size = 0.15)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "klt8-IfWkPAd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "e6b1b0e6-f3a5-4afd-f0f1-31f29b875296"
      },
      "cell_type": "code",
      "source": [
        "X_train.head()"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fare</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family-group</th>\n",
              "      <th>Share-ticket</th>\n",
              "      <th>Embarked-C</th>\n",
              "      <th>Embarked-Q</th>\n",
              "      <th>Embarked-S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>508</th>\n",
              "      <td>0.043966</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>0.054107</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>239</th>\n",
              "      <td>0.023959</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>0.025374</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>813</th>\n",
              "      <td>0.061045</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Fare  Pclass  Sex  Master  Miss  Mr  Mrs  Rare Family-group  \\\n",
              "508  0.043966       3    0       0     0   1    0     0            0   \n",
              "64   0.054107       1    0       0     0   1    0     0            0   \n",
              "239  0.023959       2    0       0     0   1    0     0            0   \n",
              "387  0.025374       2    1       0     1   0    0     0            0   \n",
              "813  0.061045       3    1       0     1   0    0     0            0   \n",
              "\n",
              "     Share-ticket  Embarked-C  Embarked-Q  Embarked-S  \n",
              "508             1           0           0           1  \n",
              "64              0           1           0           0  \n",
              "239             0           0           0           1  \n",
              "387             0           0           0           1  \n",
              "813             1           0           0           1  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 44
        }
      ]
    },
    {
      "metadata": {
        "id": "mAHnNxBfkUDV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "4adc7c67-b3d5-4b19-809b-ef1e6add8f31"
      },
      "cell_type": "code",
      "source": [
        "X_validate.head()"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Fare</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Master</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family-group</th>\n",
              "      <th>Share-ticket</th>\n",
              "      <th>Embarked-C</th>\n",
              "      <th>Embarked-Q</th>\n",
              "      <th>Embarked-S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>684</th>\n",
              "      <td>0.076123</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>453</th>\n",
              "      <td>0.173920</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>481</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>405</th>\n",
              "      <td>0.040989</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>682</th>\n",
              "      <td>0.018006</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Fare  Pclass  Sex  Master  Miss  Mr  Mrs  Rare Family-group  \\\n",
              "684  0.076123       2    0       0     0   1    0     0            1   \n",
              "453  0.173920       1    0       0     0   1    0     0            1   \n",
              "481  0.000000       2    0       0     0   1    0     0            0   \n",
              "405  0.040989       2    0       0     0   1    0     0            1   \n",
              "682  0.018006       3    0       0     0   1    0     0            0   \n",
              "\n",
              "     Share-ticket  Embarked-C  Embarked-Q  Embarked-S  \n",
              "684             1           0           0           1  \n",
              "453             1           1           0           0  \n",
              "481             0           0           0           1  \n",
              "405             1           0           0           1  \n",
              "682             0           0           0           1  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "metadata": {
        "id": "-NHyNXjjkWH1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "99fcf74a-7cf3-4079-9fac-29e250dedf6e"
      },
      "cell_type": "code",
      "source": [
        "y_train.head()"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "508    0.0\n",
              "64     0.0\n",
              "239    0.0\n",
              "387    1.0\n",
              "813    0.0\n",
              "Name: Survived, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 46
        }
      ]
    },
    {
      "metadata": {
        "id": "lxyfa7xZkWPQ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 119
        },
        "outputId": "7a6fae36-e959-47a9-aae3-77d449a7c996"
      },
      "cell_type": "code",
      "source": [
        "y_validate.head()"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "684    0.0\n",
              "453    1.0\n",
              "481    0.0\n",
              "405    0.0\n",
              "682    0.0\n",
              "Name: Survived, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "metadata": {
        "id": "flBbpVExlrle",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 474
        },
        "outputId": "d65bfaf4-48f0-4aa4-8fd9-8500c8dfc6a8"
      },
      "cell_type": "code",
      "source": [
        "X_test = get_test_data()\n",
        "X_test.head()"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Name</th>\n",
              "      <th>Parch</th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Sex</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>...</th>\n",
              "      <th>Miss</th>\n",
              "      <th>Mr</th>\n",
              "      <th>Mrs</th>\n",
              "      <th>Rare</th>\n",
              "      <th>Family</th>\n",
              "      <th>Family-group</th>\n",
              "      <th>Share-ticket</th>\n",
              "      <th>Embarked-C</th>\n",
              "      <th>Embarked-Q</th>\n",
              "      <th>Embarked-S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.425</td>\n",
              "      <td>M</td>\n",
              "      <td>Q</td>\n",
              "      <td>0.015282</td>\n",
              "      <td>Kelly, Mr. James</td>\n",
              "      <td>0</td>\n",
              "      <td>892</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.575</td>\n",
              "      <td>M</td>\n",
              "      <td>S</td>\n",
              "      <td>0.013663</td>\n",
              "      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n",
              "      <td>0</td>\n",
              "      <td>893</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.775</td>\n",
              "      <td>M</td>\n",
              "      <td>Q</td>\n",
              "      <td>0.018909</td>\n",
              "      <td>Myles, Mr. Thomas Francis</td>\n",
              "      <td>0</td>\n",
              "      <td>894</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.325</td>\n",
              "      <td>M</td>\n",
              "      <td>S</td>\n",
              "      <td>0.016908</td>\n",
              "      <td>Wirz, Mr. Albert</td>\n",
              "      <td>0</td>\n",
              "      <td>895</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.275</td>\n",
              "      <td>M</td>\n",
              "      <td>S</td>\n",
              "      <td>0.023984</td>\n",
              "      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n",
              "      <td>1</td>\n",
              "      <td>896</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Age Cabin Embarked      Fare  \\\n",
              "0  0.425     M        Q  0.015282   \n",
              "1  0.575     M        S  0.013663   \n",
              "2  0.775     M        Q  0.018909   \n",
              "3  0.325     M        S  0.016908   \n",
              "4  0.275     M        S  0.023984   \n",
              "\n",
              "                                           Name  Parch  PassengerId  Pclass  \\\n",
              "0                              Kelly, Mr. James      0          892       3   \n",
              "1              Wilkes, Mrs. James (Ellen Needs)      0          893       3   \n",
              "2                     Myles, Mr. Thomas Francis      0          894       2   \n",
              "3                              Wirz, Mr. Albert      0          895       3   \n",
              "4  Hirvonen, Mrs. Alexander (Helga E Lindqvist)      1          896       3   \n",
              "\n",
              "   Sex  SibSp    ...      Miss Mr Mrs  Rare  Family  Family-group  \\\n",
              "0    0      0    ...         0  1   0     0       0             0   \n",
              "1    1      1    ...         0  0   1     0       1             1   \n",
              "2    0      0    ...         0  1   0     0       0             0   \n",
              "3    0      0    ...         0  1   0     0       0             0   \n",
              "4    1      1    ...         0  0   1     0       2             1   \n",
              "\n",
              "   Share-ticket  Embarked-C  Embarked-Q Embarked-S  \n",
              "0             0           0           1          0  \n",
              "1             0           0           0          1  \n",
              "2             0           0           1          0  \n",
              "3             0           0           0          1  \n",
              "4             1           0           0          1  \n",
              "\n",
              "[5 rows x 24 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "metadata": {
        "id": "Ac760qMgkm9Y",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "### Build models\n",
        "Let's use sklearn to build some models:"
      ]
    },
    {
      "metadata": {
        "id": "fuNp2B3Rl7wL",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Creates a function to get the answer from a model\n",
        "def get_answer(model, X_test, threshold):\n",
        "  predictions = model.predict(X_test[features])  \n",
        "  answer = pd.DataFrame()\n",
        "  answer['PassengerId'] = X_test['PassengerId']\n",
        "  answer['Survived'] = pd.Series(predictions).apply(lambda x: 1 if x >= threshold else 0)\n",
        "  return answer"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "xR1Ifkp4onxu",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### LogisticRegression"
      ]
    },
    {
      "metadata": {
        "id": "epn2roIinQNp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 88
        },
        "outputId": "4b911df2-1f13-4172-d9bc-0728a5738254"
      },
      "cell_type": "code",
      "source": [
        "# Makes the model:\n",
        "lr = LogisticRegression(penalty = 'l1',\n",
        "                       max_iter = 1000000)\n",
        "lr.fit(X_train, y_train)\n",
        "print('Mean accuracy:', lr.score(X_validate, y_validate))"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mean accuracy: 0.8208955223880597\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "metadata": {
        "id": "jbFPzkrkQlBs",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 224
        },
        "outputId": "3519e97a-8ca1-4e7a-de05-e6a186b8990e"
      },
      "cell_type": "code",
      "source": [
        "# Cross validation:\n",
        "scores = cross_validate(lr, \n",
        "                        get_train_data()[features], \n",
        "                        get_train_data()['Survived'], \n",
        "                        cv = 5,\n",
        "                       return_train_score = False,\n",
        "                       scoring = 'accuracy')\n",
        "print('Cross validation score:', scores['test_score'])"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cross validation score: [0.83798883 0.81564246 0.82022472 0.78089888 0.83615819]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n",
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "metadata": {
        "id": "N7x_OtLFRdgS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "f3967133-1f3a-4436-dbf5-550fbb17f49c"
      },
      "cell_type": "code",
      "source": [
        "lr.coef_"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 0.        , -0.96507693,  2.93886414,  2.51347655,  0.        ,\n",
              "         0.        ,  0.12372812,  0.        ,  0.66047057, -0.58684694,\n",
              "         0.53435229,  0.233014  ,  0.        ]])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "metadata": {
        "id": "MmcaAnw4pYVd",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Predicts:\n",
        "answer = get_answer(lr, X_test, 0.5)\n",
        "answer.to_csv('sample_data/logistic_regression.csv', index = False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "uTNFYS5vqdsh",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### RandomForestClassifier"
      ]
    },
    {
      "metadata": {
        "id": "h3ztAcidqdGo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "d1c6f3c6-6408-4186-83b5-7e84bed7fdd0"
      },
      "cell_type": "code",
      "source": [
        "# Makes the model\n",
        "rfc = RandomForestClassifier(n_estimators = 100,\n",
        "                            max_leaf_nodes = 400)\n",
        "rfc.fit(X_train, y_train)\n",
        "print('Mean accuracy:', rfc.score(X_validate, y_validate))"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mean accuracy: 0.8059701492537313\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "KeOdeKbkq0VE",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Predicts:\n",
        "answer = get_answer(rfc, X_test, 0.5)\n",
        "answer.to_csv('sample_data/random_forest_classifier.csv', index = False)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "SqGJ-746UVpu",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "#### GradientBoostingClassifier"
      ]
    },
    {
      "metadata": {
        "id": "s6TUwPTXUU1U",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "3b062f51-e425-4b31-efe9-8163a662863b"
      },
      "cell_type": "code",
      "source": [
        "# Makes the model\n",
        "gbc = GradientBoostingClassifier(loss = 'deviance',\n",
        "                                learning_rate = 0.07,\n",
        "                                n_estimators = 10000)\n",
        "gbc.fit(X_train, y_train)\n",
        "print('Mean accuracy:', gbc.score(X_validate, y_validate))"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mean accuracy: 0.8432835820895522\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "ssUrvUuPWjzr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "e5254f1f-4563-4f79-b192-1208afea2bf5"
      },
      "cell_type": "code",
      "source": [
        "# Cross validation:\n",
        "scores = cross_validate(gbc, \n",
        "                        get_train_data()[features], \n",
        "                        get_train_data()['Survived'], \n",
        "                        cv = 5,\n",
        "                       return_train_score = False,\n",
        "                       scoring = 'accuracy')\n",
        "print('Cross validation score:', scores['test_score'])"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cross validation score: [0.79888268 0.79888268 0.83707865 0.84831461 0.83615819]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "vaNz-Eo5WDXR",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Predicts:\n",
        "answer = get_answer(gbc, X_test, 0.5)\n",
        "answer.to_csv('sample_data/gradient_boosting_classifier.csv', index = False)"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}